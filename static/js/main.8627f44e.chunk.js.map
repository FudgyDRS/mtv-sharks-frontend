{"version":3,"sources":["assets/images/dao-info.jpeg","assets/images/shark-club.jpeg","assets/images/MTV_shark_bitchattack - Musyk fabryk-p-800.png","assets/images/Spliffshark - Elias Campos-p-800.png","assets/images/ZombieShark01 - dannydonkey-p-800.jpeg","assets/images/logo.png","components/Countdown.tsx","pages/Home.tsx","modules/usedapp2/constants/chainId.ts","components/faq/BlockLaunchFaq.tsx","pages/Faq.tsx","modules/usedapp2/constants/abi/index.ts","modules/usedapp2/model/formatting.ts","modules/usedapp2/model/Currency.ts","modules/usedapp2/model/CurrencyValue.ts","modules/usedapp2/model/TransactionStatus.ts","modules/usedapp2/constants/currencies.ts","modules/usedapp2/constants/blacklist.ts","modules/usedapp2/providers/chainState/context.ts","modules/usedapp2/hooks/useChainCalls.ts","modules/usedapp2/hooks/useMulticallAddress.ts","modules/usedapp2/hooks/useBlockMeta.ts","modules/usedapp2/hooks/useDebounce.ts","modules/usedapp2/hooks/useDebouncePair.ts","modules/usedapp2/model/config/default.ts","modules/usedapp2/providers/config/context.ts","modules/usedapp2/hooks/useEthers.ts","modules/usedapp2/hooks/useContractCall.ts","modules/usedapp2/providers/config/reducer.ts","modules/usedapp2/providers/config/provider.tsx","modules/usedapp2/providers/blockNumber/context.ts","modules/usedapp2/providers/blockNumber/reducer.ts","modules/usedapp2/providers/blockNumber/provider.tsx","modules/usedapp2/providers/chainState/callsReducer.ts","modules/usedapp2/providers/chainState/chainStateReducer.ts","modules/usedapp2/providers/devtools.ts","modules/usedapp2/providers/chainState/multicall.ts","modules/usedapp2/providers/chainState/provider.tsx","modules/usedapp2/providers/chainState/useDevtoolsReporting.ts","modules/usedapp2/providers/EthersProvider.tsx","modules/usedapp2/providers/notifications/model.ts","modules/usedapp2/providers/notifications/context.ts","modules/usedapp2/providers/notifications/reducer.ts","modules/usedapp2/providers/notifications/provider.tsx","modules/usedapp2/providers/NetworkActivator.tsx","modules/usedapp2/providers/transactions/model.ts","modules/usedapp2/providers/transactions/context.ts","modules/usedapp2/providers/transactions/reducer.ts","modules/usedapp2/providers/transactions/provider.tsx","modules/usedapp2/helpers/chain.ts","modules/usedapp2/providers/LocalMulticallProvider.tsx","modules/usedapp2/helpers/common.ts","modules/usedapp2/helpers/address.ts","modules/usedapp2/helpers/transaction.ts","modules/usedapp2/helpers/contract.ts","modules/usedapp2/providers/DAppProvider.tsx","modules/usedapp2/hooks/usePromiseTransaction.ts","modules/usedapp2/hooks/useContractFunction.ts","modules/usedapp2/hooks/useEtherBalance.ts","modules/usedapp2/hooks/useTokenBalance.ts","modules/usedapp2/hooks/useTokenAllowance.ts","modules/usedapp2/hooks/useLocalStorage.ts","modules/usedapp2/hooks/useTransactions.ts","modules/usedapp2/hooks/useInterval.tsx","modules/usedapp2/hooks/useNotifications.ts","modules/usedapp2/hooks/useSendTransaction.ts","modules/usedapp2/hooks/useGasPrice.ts","modules/usedapp2/hooks/useLookupAddress.ts","abi/mtvSharks.tsx","components/dao/BlockBanner.tsx","pages/Dao.tsx","components/marketplace/BlockMarketplace.tsx","pages/Marketplace.tsx","components/shark-club/BlockBanner.tsx","pages/SharkClub.tsx","App.tsx","components/AccountModal/Identicon.tsx","components/AccountModal/ConnectButton.tsx","components/StatusCircle.tsx","components/NftModal.tsx","components/AccountModal/AccountModalCard.tsx","components/AccountModal/AccountModalPagination.tsx","components/AccountModal/AccountModalCollection.tsx","components/AccountModal/AccountModal.tsx","components/Header.tsx","components/Footer.tsx","index.tsx"],"names":["futureDate","Date","Countdown","useState","year","month","day","hour","minute","second","diff","setDiff","useEffect","timer","setInterval","date1","date2","getTime","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getDateDiff","clearInterval","className","ChainId","Home","console","log","now","BlockLaunchFaq","width","height","src","require","default","boxSize","Block","styled","div","Faq","MultiCallABI","Interface","MultiCall","abi","ERC20Interface","ERC20","ERC20MockInterface","ERC20Mock","CHAIN_NAMES","Mainnet","Ropsten","Kovan","Rinkeby","Goerli","xDai","Polygon","Moonriver","Mumbai","Harmony","Localhost","Hardhat","BSC","BSC_Testnet","FTM","FTM_Testnet","MultiVAC","Findora","Findora_Testnet","MULTICALL_ADDRESSES","TEST_CHAINS","LOCAL_CHAINS","DEFAULT_OPTIONS","decimals","thousandSeparator","decimalSeparator","significantDigits","Infinity","useFixedPrecision","fixedPrecisionDigits","prefix","suffix","INPUT_REGEX","formatCurrency","options","value","test","TypeError","number","integer","length","replace","stripFrontZeroes","substring","getIntegerPart","thousands","separator","count","resultValue","split","i","splice","join","splitThousands","decimal","padStart","getDecimalPart","digits","padEnd","toFixed","integerLength","stripEndZeroes","toSignificant","joinDecimals","formatNumber","Currency","name","ticker","formattingOptions","this","overrideOptions","FiatCurrency","NativeCurrency","chainId","Token","address","CurrencyValue","currency","toString","format","other","fn","checkCurrency","map","x","add","sub","mul","mod","eq","lt","lte","gt","gte","isZero","BigNumber","from","transactionErrored","transaction","Ether","Dai","KovanEther","KovanDai","MTV","NATIVE_CURRENCY","BLACKLISTED_ADDRESSES","BlacklistId","Map","ChainStateContext","createContext","multicallAddress","dispatchCalls","useChainState","useContext","useChainCalls","calls","filteredCalls","filter","Boolean","type","JSON","stringify","useMemo","call","state","data","useChainCall","useMulticallAddress","GET_CURRENT_BLOCK_TIMESTAMP_CALL","encodeFunctionData","GET_CURRENT_BLOCK_DIFFICULTY_CALL","useBlockMeta","timestamp","difficulty","undefined","toNumber","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebouncePair","first","DEFAULT_CONFIG","pollingInterval","supportedChains","notifications","checkInterval","expirationPeriod","ConfigContext","config","updateConfig","useConfig","useUpdateConfig","useEthers","result","useWeb3React","activateBrowserWallet","useCallback","onError","throwErrors","a","injected","InjectedConnector","supportedChainIds","Function","activate","warnOnInvalidContractCall","warn","method","args","encodeCallData","useContractCall","useContractCalls","results","idx","decodeFunctionResult","configReducer","action","merge","ConfigProvider","children","useReducer","reducedConfig","dispatch","Provider","BlockNumberContext","useBlockNumber","blockNumberReducer","current","blockNumber","BlockNumberProvider","library","update","on","off","debouncedState","callsReducer","finalState","index","findIndex","_","chainStateReducer","newState","oldState","Object","entries","error","hook","ABI","multicall","provider","requests","contract","Contract","aggregate","blockTag","stateForAddress","notifyDevtools","notification","init","Error","message","send","ChainStateProvider","multicallAddresses","dispatchState","debouncedCalls","uniqueCalls","unique","request","find","push","getUnique","uniqueCallsJSON","account","useDevtoolsReporting","start","then","duration","catch","provided","window","__USEDAPP_DEVTOOLS_HOOK__","EthersProvider","getLibrary","Web3Provider","DEFAULT_NOTIFICATIONS","NotificationsContext","addNotification","removeNotification","useNotificationsContext","notificationReducer","chainState","id","notificationId","NotificationsProvider","nanoid","submittedAt","NetworkActivator","connectedChainId","active","connector","readOnlyChainId","readOnlyUrls","eagerConnect","isAuthorized","NetworkConnector","defaultChainId","urls","getStoredTransactionState","receipt","status","DEFAULT_STORED_TRANSACTIONS","TransactionsContext","transactions","addTransaction","useTransactionsContext","transactionReducer","payload","values","includes","isChainId","TransactionProvider","useLocalStorage","storage","setStorage","transactionName","updateTransactions","checkTransaction","tx","shouldCheck","getTransactionReceipt","hash","lastCheckedBlockNumber","chainTransactions","newTransactions","newTransaction","blocksSinceCheck","minutesPending","etherscanNetworkPrefix","getChainName","toLocaleLowerCase","getExplorerAddressLink","getExplorerTransactionLink","transactionHash","isTestChain","isLocalChain","LocalMulticallState","shortenString","str","shortenAddress","utils","getAddress","shortenIfAddress","compareAddress","firstAddress","secondAddress","parsedFirstAddress","parsedSecondAddress","addressEqual","shortenTransactionHash","shortenIfTransactionHash","deployContract","contractAbi","signer","factory","ContractFactory","bytecode","deploy","deployTransaction","wait","LocalMulticallProvider","Unknown","localMulticallState","setLocalMulticallState","multicallBlockNumber","setMulticallBlockNumber","Deployed","Deploying","getSigner","deployMulticall","multicallABI","contractAddress","NonLocal","awaitingMulticallBlock","DAppProvider","DAppProviderWithConfig","multicallAddressesMerged","usePromiseTransaction","setState","promiseTransaction","transactionPromise","errorMessage","reason","connectContractToSigner","connect","useContractFunction","functionName","events","setEvents","contractWithSigner","logs","interface","parseLog","useEtherBalance","useTokenBalance","tokenAddress","useTokenAllowance","ownerAddress","spenderAddress","getItem","key","item","localStorage","parse","setValue","toStore","setItem","removeItem","useTransactions","useInterval","callback","savedCallback","useRef","getExpiredNotifications","creationTime","useNotifications","chainNotifications","expiredNotification","useSendTransaction","sendTransaction","transactionRequest","useGasPrice","gasPrice","setGasPrice","getGasPrice","updateGasPrice","useLookupAddress","ens","setEns","mounted","lookupAddress","NFT","interfaceAbi","BalanceOf","owner","BlockBanner","balance","setStatus","temp","formatUnits","SetStatus","alt","Dao","Answer","text","BlockMarketplace","variant","colorScheme","Marketplace","SharkClub","App","path","component","exact","StyledIdenticon","Identicon","ref","innerHTML","appendChild","Jazzicon","parseInt","slice","ConnectButton","handleOpenModal","etherBalance","maxWidth","display","alignItems","background","borderRadius","py","mr","color","parseFloat","formatEther","onClick","bg","border","_hover","borderStyle","borderColor","backgroundColor","m","px","fontWeight","StatusCircle","input","size","as","theme","extendTheme","components","Modal","baseStyle","props","dialog","minWidth","maxHeight","minHeight","Header","NftModal","isOpen","onClose","sharkObject","isCentered","fontSize","pt","pb","mb","String","edition","mt","lineHeight","ml","href","isExternal","textDecoration","GenerateCard","useDisclosure","onOpen","isActive","Card","style","Img","renderData","columns","spacingY","todo","PaginationComponent","sharkObjects","setData","currentPage","setcurrentPage","itemsPerPage","pages","Math","ceil","indexOfLastItem","indexOfFirstItem","currentItems","pageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","handleClick","event","Number","target","renderPageNumbers","handleNextbtn","handlePrevbtn","pageIncrementBtn","pageDecrementBtn","disabled","AccountModalCollection","_owner","TokensOfOwner","indecies","Collection","sharkList","newArray","MakeArray","metadata","AccountModal","deactivate","justifyContent","alignContent","onCopy","borderBottomLeftRadius","borderBottomRightRadius","padding","click","setClick","closeMobileMenu","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8627f44e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dao-info.443066f2.jpeg\";","export default __webpack_public_path__ + \"static/media/shark-club.374e7c2e.jpeg\";","export default __webpack_public_path__ + \"static/media/MTV_shark_bitchattack - Musyk fabryk-p-800.9aa74f83.png\";","export default __webpack_public_path__ + \"static/media/Spliffshark - Elias Campos-p-800.6dfdb081.png\";","export default __webpack_public_path__ + \"static/media/ZombieShark01 - dannydonkey-p-800.0ff2ce9b.jpeg\";","export default __webpack_public_path__ + \"static/media/logo.cdbd5e1d.png\";","import { Text } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst futureDate = new Date(1648224000000);\r\nconst getDateDiff = (date1: Date, date2: Date) => {\r\n  const diff = new Date(date2.getTime() - date1.getTime());\r\n  return {\r\n    year: diff.getUTCFullYear() - 1970,\r\n    month: diff.getUTCMonth(),\r\n    day: diff.getUTCDate() - 1,\r\n    hour: diff.getUTCHours(),\r\n    minute: diff.getUTCMinutes(),\r\n    second: diff.getUTCSeconds()\r\n  };\r\n};\r\n\r\nconst formatDate = (date: Date) => {\r\n  let d = new Date(date),\r\n    month = (d.getMonth() + 1).toString(),\r\n    day = d.getDate().toString(),\r\n    year = d.getFullYear().toString();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n\r\nexport default function Countdown() {\r\n  const [diff, setDiff] = useState({ year: 0, month: 0, day: 0, hour: 0, minute: 0, second: 0 });\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setDiff(getDateDiff(new Date(), futureDate));\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"countdown-box\">\r\n        <div className=\"countdown\">\r\n        <Text className=\"countdown-title\">Time Until Launch (4PM UTC)</Text>\r\n        <div className=\"countdown-time\">\r\n            <Text className=\"countdown-time-num\">{diff.day}   </Text><Text className=\"countdown-time-text\"> DAYS </Text>\r\n            <Text className=\"countdown-time-num\">{diff.hour}  </Text><Text className=\"countdown-time-text\"> HRS </Text>\r\n            <Text className=\"countdown-time-num\">{diff.minute}</Text><Text className=\"countdown-time-text\"> MINS </Text>\r\n            <Text className=\"countdown-time-num\">{diff.second}</Text><Text className=\"countdown-time-text\"> SECS </Text>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import { FC } from \"react\";\r\nimport Countdown from \"../components/Countdown\";\r\nimport BlockMintNFT from \"../components/home/BlockMintNFT\";\r\nimport BlockRecentMints from \"../components/home/BlockRecentMints\";\r\n\r\nconst Home: FC = () => {\r\n\r\n  //1648224000000\r\n  //1647933422936\r\n  console.log(\"Date: \", Date.now())\r\n  console.log(\"Countdown: \", 1648224000000 - Date.now())\r\n  \r\n    return (\r\n      <div className=\"default-dark\">\r\n        <Countdown />\r\n        {/* <BlockMintNFT />\r\n        <BlockRecentMints /> */}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Home;\r\n","export enum ChainId {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Goerli = 5,\n  Kovan = 42,\n  xDai = 100,\n  Polygon = 137,\n  Moonriver = 1285,\n  Mumbai = 80001,\n  Harmony = 1666600000,\n  Localhost = 1337,\n  Hardhat = 31337,\n  BSC = 56,\n  BSC_Testnet = 97,\n  FTM = 250,\n  FTM_Testnet = 4002,\n  MultiVAC = 62621,\n  Findora = 2152,\n  Findora_Testnet = 2153,\n}\n\nexport const CHAIN_NAMES = {\n  [ChainId.Mainnet]: \"Mainnet\",\n  [ChainId.Ropsten]: \"Ropsten\",\n  [ChainId.Kovan]: \"Kovan\",\n  [ChainId.Rinkeby]: \"Rinkeby\",\n  [ChainId.Goerli]: \"Goerli\",\n  [ChainId.xDai]: \"xDai\",\n  [ChainId.Polygon]: \"Polygon\",\n  [ChainId.Moonriver]: \"Moonriver\",\n  [ChainId.Mumbai]: \"Mumbai\",\n  [ChainId.Harmony]: \"Harmony\",\n  [ChainId.Localhost]: \"Localhost\",\n  [ChainId.Hardhat]: \"Hardhat\",\n  [ChainId.BSC]: \"BSC\",\n  [ChainId.BSC_Testnet]: \"BSC_Testnet\",\n  [ChainId.FTM]: \"FTM\",\n  [ChainId.FTM_Testnet]: \"FTM_Testnet\",\n  [ChainId.MultiVAC]: \"MultiVAC\",\n  [ChainId.Findora]: \"Findora\",\n  [ChainId.Findora_Testnet]: \"Findora_Testnet\"\n};\n\nexport const MULTICALL_ADDRESSES = {\n  [ChainId.Mainnet]: \"0xeefba1e63905ef1d7acba5a8513c70307c1ce441\",\n  [ChainId.Ropsten]: \"0x53c43764255c17bd724f74c4ef150724ac50a3ed\",\n  [ChainId.Rinkeby]: \"0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821\",\n  [ChainId.Goerli]: \"0x77dca2c955b15e9de4dbbcf1246b4b85b651e50e\",\n  [ChainId.Kovan]: \"0x2cc8688c5f75e365aaeeb4ea8d6a480405a48d2a\",\n  [ChainId.BSC]: \"0x41263cba59eb80dc200f3e2544eda4ed6a90e76c\",\n  [ChainId.xDai]: \"0xb5b692a88bdfc81ca69dcb1d924f59f0413a602a\",\n  [ChainId.Polygon]: \"0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507\",\n  [ChainId.Moonriver]: \"0xa9177F8d98DAaB74C24715Ba0A81b73654710523\",\n  [ChainId.Mumbai]: \"0x08411ADd0b5AA8ee47563b146743C13b3556c9Cc\",\n  [ChainId.Harmony]: \"0xFE4980f62D708c2A84D3929859Ea226340759320\",\n  [ChainId.BSC_Testnet]: \"0xBeA7a0Ea352fc5F7BC92566509964742186796c8\",\n  [ChainId.FTM_Testnet]: \"0x23aDdd9b36ae4E5B83a70bbBF93709C44299A565\",\n  [ChainId.MultiVAC]: \"0x8924755a7FB45bF0A37A6A773795CFa878114A26\",\n  [ChainId.Findora]: \"0x0000000000000000000000000000000000000000\",\n  [ChainId.Findora_Testnet]: \"0x8924755a7FB45bF0A37A6A773795CFa878114A26\",\n};\n\nexport const TEST_CHAINS = [\n  ChainId.Ropsten,\n  ChainId.Kovan,\n  ChainId.Rinkeby,\n  ChainId.Goerli,\n  ChainId.Mumbai,\n  ChainId.Localhost,\n  ChainId.Hardhat\n];\n\nexport const LOCAL_CHAINS = [ChainId.Localhost, ChainId.Hardhat];\n","import { FC } from \"react\"\r\nimport { Box, Text, Image } from \"@chakra-ui/react\"\r\n\r\nimport \"../../styles/faq.scss\";\r\n\r\nconst BlockLaunchFaq: FC = () => {\r\n  return (\r\n    <Box width=\"100hw\" height=\"80vh\">\r\n        <div className=\"title\">Frequently Asked Questions (FAQs)</div>\r\n        <Box>\r\n            <div className=\"question\">Q: How many MTV Sharks will be minted?</div>\r\n            <div className=\"answer\">3,333 unique Sharks will be minted.</div>\r\n        </Box>\r\n        <Box>\r\n            <div className=\"question\">Q: What is the price of the MTV Sharks on mint?<br/>A:</div>\r\n            <div className=\"answer\">\r\n                1-150:     Given away as prizes\r\n                <br/>151-1000:  333 MTV per Shark\r\n                <br/>1001-1500: 444 MTV per Shark\r\n                <br/>1501-2000: 666 MTV per Shark\r\n                <br/>2001-3333: 999 MTV per Shark\r\n            </div>\r\n        </Box>\r\n        <Box>\r\n            <div className=\"question\">Q: What time is the mint?<br/>A:</div>\r\n            <div className=\"answer\">\r\n                New York    - 2/28: 8PM\r\n                <br/>Los Angeles - 2/28: 5PM\r\n                <br/>Amsterdam   - 3/1:  2AM\r\n                <br/>Dubai       - 3/1:  5AM\r\n                <br/>Taipei      - 3/1:  9AM\r\n                <br/>Tokyo       - 3/1: 10AM\r\n            </div>\r\n        </Box>\r\n        <Box>\r\n            <div className=\"question\">Q: What happens if something goes wrong during the mint? (Sometimes, shit happens)<br/>A:</div>\r\n            <div className=\"answer\">The mint will be rescheduled for exactly 24 hours later. (I don't want anyone missing sleep over launches like I did, lol)</div>\r\n        </Box>\r\n        <Box>\r\n            <div className=\"question\">Q: What are the advantages of holding a Shark NFT?<br/>A:</div>\r\n            <div className=\"answer\">There are several depending on how many you want to hold. If you hold at least 3 Sharks, you can participate in the DAO voting and activities. If you hold 9 or more Sharks, you can become a member of The Shark Club.</div>\r\n        </Box>\r\n        <Box>\r\n            <div className=\"question\">Q: Do the winners of the Design Your Own Shark Contest really get their Shark minted in the collection?<br/>A:</div>\r\n            <div className=\"answer\">Absolutely! These three 1:1 pieces will appear at the end of the mint, so if you're lucky enough to be minting until the end, you'll have a higher chance of scoring these legit gems!*/</div>\r\n        </Box>\r\n        <div className=\"contest-winners\">\r\n            <Box>\r\n                <Image src={require(\"../../assets/images/MTV_shark_bitchattack - Musyk fabryk-p-800.png\").default} boxSize=\"300px\" />\r\n                <Text className=\"name\">MTV Shark Bitchattack<br/>By: Musyk Fabryk</Text>\r\n            </Box>\r\n            <Box>\r\n                <Image src={require(\"../../assets/images/Spliffshark - Elias Campos-p-800.png\").default} boxSize=\"300px\" />\r\n                <Text className=\"name\">MTV Spliffshark<br/>By: Elias Campos</Text>\r\n            </Box>\r\n            <Box>\r\n                <Image src={require(\"../../assets/images/ZombieShark01 - dannydonkey-p-800.jpeg\").default} boxSize=\"300px\" />\r\n                <Text className=\"name\">ZombieShark01<br/>By: dannydonkey</Text>\r\n            </Box>\r\n        </div>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default BlockLaunchFaq;\r\n","import { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport BlockLaunchFaq from \"../components/faq/BlockLaunchFaq\";\r\n\r\nconst Block = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-left: 30vh;\r\n  margin-right: 30vh;\r\n  @media (max-width: 1208px) {\r\n    margin-left: 10vh;\r\n    margin-right: 10vh;\r\n  }\r\n  @media (max-width: 708px) {\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n  }\r\n`;\r\n/*@media (max-width: 768px) {\r\n  .ethText {\r\n    font-size: 12pt;\r\n  }\r\n  .ethBox {\r\n    margin-inline: 10px;\r\n  }\r\n  .accountText {\r\n    font-size: 12pt;\r\n  }\r\n  .accountButton {\r\n    height: 38px;\r\n  }\r\n  .styledIdenticon {\r\n    height: 0.75rem;\r\n    width: 0.75rem;\r\n  }\r\n}*/\r\n\r\nconst Faq: FC = () => {\r\n  \r\n    return (\r\n      <div className=\"background-faq\">\r\n      <Block>\r\n        <BlockLaunchFaq/>\r\n      </Block>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Faq;\r\n","import { Interface } from \"@ethersproject/abi\";\nimport MultiCall from \"./MultiCall.json\";\nimport ERC20 from \"./ERC20.json\";\nimport ERC20Mock from \"./ERC20Mock.json\";\n\nconst MultiCallABI = new Interface(MultiCall.abi);\n\nexport { MultiCall, MultiCallABI };\n\nconst ERC20Interface = new Interface(ERC20.abi);\n\nexport { ERC20, ERC20Interface };\n\nconst ERC20MockInterface = new Interface(ERC20Mock.abi);\n\nexport { ERC20Mock, ERC20MockInterface };\n","export const DEFAULT_OPTIONS = {\n  decimals: 0,\n  thousandSeparator: \",\",\n  decimalSeparator: \".\",\n  significantDigits: Infinity,\n  useFixedPrecision: false,\n  fixedPrecisionDigits: 0,\n  prefix: \"\",\n  suffix: \"\"\n};\n\nexport type CurrencyFormatOptions = typeof DEFAULT_OPTIONS;\n\nconst INPUT_REGEX = /^\\d*$/;\n\nexport function formatCurrency(options: CurrencyFormatOptions, value: string): string {\n  if (!INPUT_REGEX.test(value)) {\n    throw new TypeError(\"Invalid input, decimal string expected.\");\n  }\n  const number = formatNumber(options, value);\n  return [options.prefix, number, options.suffix].join(\"\");\n}\n\nfunction formatNumber(options: CurrencyFormatOptions, value: string) {\n  const integer = getIntegerPart(value, options.decimals);\n  const thousands = splitThousands(integer, options.thousandSeparator);\n  const decimal = getDecimalPart(value, options.decimals);\n  const digits = options.useFixedPrecision\n    ? toFixed(decimal, options.fixedPrecisionDigits)\n    : toSignificant(decimal, integer.length, options.significantDigits);\n  return joinDecimals(thousands, digits, options.decimalSeparator);\n}\n\nfunction getIntegerPart(value: string, decimals: number) {\n  if (value.length <= decimals) {\n    return \"0\";\n  } else {\n    const fragment = value.substring(0, value.length - decimals);\n    return stripFrontZeroes(fragment);\n  }\n}\n\nfunction stripFrontZeroes(value: string) {\n  const stripped = value.replace(/^0+/, \"\");\n  return stripped || \"0\";\n}\n\nfunction splitThousands(value: string, separator: string) {\n  const count = value.length / 3;\n  const resultValue = value.split(\"\");\n  for (let i = 1; i < count; i++) {\n    resultValue.splice(-4 * i + 1, 0, separator);\n  }\n  return resultValue.join(\"\");\n}\n\nfunction getDecimalPart(value: string, decimals: number) {\n  if (value.length <= decimals) {\n    return value.padStart(decimals, \"0\");\n  } else {\n    return value.substring(value.length - decimals);\n  }\n}\n\nfunction joinDecimals(integer: string, decimals: string, separator: string) {\n  if (!decimals) {\n    return integer;\n  } else {\n    return `${integer}${separator}${decimals}`;\n  }\n}\n\nfunction toSignificant(decimal: string, integerLength: number, significantDigits: number) {\n  const length = significantDigits - integerLength;\n  if (length > decimal.length) {\n    return stripEndZeroes(decimal);\n  } else {\n    return stripEndZeroes(decimal.substring(0, length));\n  }\n}\n\nfunction stripEndZeroes(value: string) {\n  return value.replace(/0+$/, \"\");\n}\n\nfunction toFixed(decimal: string, fixedPrecisionDigits: number) {\n  if (fixedPrecisionDigits > decimal.length) {\n    return decimal.padEnd(fixedPrecisionDigits, \"0\");\n  } else {\n    return decimal.substring(0, fixedPrecisionDigits);\n  }\n}\n","import { ChainId } from \"../constants\";\nimport { CurrencyFormatOptions, DEFAULT_OPTIONS, formatCurrency } from \"./formatting\";\n\nexport class Currency {\n  public formattingOptions: CurrencyFormatOptions;\n\n  constructor(\n    readonly name: string,\n    readonly ticker: string,\n    readonly decimals: number,\n    formattingOptions: Partial<CurrencyFormatOptions> = {}\n  ) {\n    this.formattingOptions = { ...DEFAULT_OPTIONS, decimals, ...formattingOptions };\n  }\n\n  format(value: string, overrideOptions: Partial<CurrencyFormatOptions> = {}) {\n    return formatCurrency({ ...this.formattingOptions, ...overrideOptions }, value);\n  }\n}\n\nexport class FiatCurrency extends Currency {\n  constructor(\n    name: string,\n    ticker: string,\n    decimals = 2,\n    formattingOptions: Partial<CurrencyFormatOptions> = {}\n  ) {\n    super(name, ticker, decimals, {\n      useFixedPrecision: true,\n      fixedPrecisionDigits: decimals,\n      ...formattingOptions\n    });\n  }\n}\n\nexport class NativeCurrency extends Currency {\n  constructor(\n    name: string,\n    ticker: string,\n    readonly chainId: ChainId,\n    decimals = 18,\n    formattingOptions: Partial<CurrencyFormatOptions> = {}\n  ) {\n    super(name, ticker, decimals, {\n      suffix: ` ${ticker}`,\n      significantDigits: 6,\n      ...formattingOptions\n    });\n  }\n}\n\nexport class Token extends Currency {\n  constructor(\n    name: string,\n    ticker: string,\n    readonly chainId: ChainId,\n    readonly address: string,\n    decimals = 18,\n    formattingOptions: Partial<CurrencyFormatOptions> = {}\n  ) {\n    super(name, ticker, decimals, {\n      suffix: ` ${ticker}`,\n      significantDigits: 6,\n      ...formattingOptions\n    });\n  }\n}\n","import { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Currency } from \"./Currency\";\nimport { CurrencyFormatOptions } from \"./formatting\";\n\nexport class CurrencyValue {\n  constructor(readonly currency: Currency, readonly value: BigNumber) {}\n\n  static fromString(currency: Currency, value: string) {\n    return new CurrencyValue(currency, BigNumber.from(value));\n  }\n\n  static zero(currency: Currency) {\n    return new CurrencyValue(currency, BigNumber.from(0));\n  }\n\n  toString() {\n    return this.value.toString();\n  }\n\n  format(overrideOptions: Partial<CurrencyFormatOptions> = {}) {\n    return this.currency.format(this.value.toString(), overrideOptions);\n  }\n\n  private checkCurrency(other: CurrencyValue) {\n    if (this.currency !== other.currency) {\n      throw new TypeError(`Currency mismatch ${this.currency.ticker} != ${other.currency.ticker}`);\n    }\n  }\n\n  map(fn: (value: BigNumber) => BigNumber) {\n    return new CurrencyValue(this.currency, fn(this.value));\n  }\n\n  add(other: CurrencyValue) {\n    this.checkCurrency(other);\n    return this.map((x) => x.add(other.value));\n  }\n\n  sub(other: CurrencyValue) {\n    this.checkCurrency(other);\n    return this.map((x) => x.sub(other.value));\n  }\n\n  mul(value: BigNumberish) {\n    return this.map((x) => x.mul(value));\n  }\n\n  div(value: BigNumberish) {\n    return this.map((x) => x.div(value));\n  }\n\n  mod(value: BigNumberish) {\n    return this.map((x) => x.mod(value));\n  }\n\n  equals(other: CurrencyValue) {\n    return this.currency === other.currency && this.value.eq(other.value);\n  }\n\n  lt(other: CurrencyValue) {\n    this.checkCurrency(other);\n    return this.value.lt(other.value);\n  }\n\n  lte(other: CurrencyValue) {\n    this.checkCurrency(other);\n    return this.value.lte(other.value);\n  }\n\n  gt(other: CurrencyValue) {\n    this.checkCurrency(other);\n    return this.value.gt(other.value);\n  }\n\n  gte(other: CurrencyValue) {\n    this.checkCurrency(other);\n    return this.value.gte(other.value);\n  }\n\n  isZero() {\n    return this.value.isZero();\n  }\n}\n","import { ChainId } from \"../constants\";\nimport { TransactionResponse, TransactionReceipt } from \"@ethersproject/abstract-provider\";\n\nexport type TransactionState = \"None\" | \"Mining\" | \"Success\" | \"Fail\" | \"Exception\";\n\nexport interface TransactionStatus {\n  status: TransactionState;\n  transaction?: TransactionResponse;\n  receipt?: TransactionReceipt;\n  chainId?: ChainId;\n  errorMessage?: string;\n}\n\nexport function transactionErrored(transaction: TransactionStatus) {\n  return \"errorMessage\" in transaction;\n}\n","import { NativeCurrency, Token } from \"../model\";\nimport { ChainId } from \"./chainId\";\n\nexport const Ether = new NativeCurrency(\"Ether\", \"ETH\", ChainId.Mainnet);\nexport const Dai = new Token(\n  \"Dai\",\n  \"DAI\",\n  ChainId.Mainnet,\n  \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n);\n\nexport const KovanEther = new NativeCurrency(\"Kovan Ether\", \"KETH\", ChainId.Kovan);\nexport const KovanDai = new Token(\n  \"Dai\",\n  \"DAI\",\n  ChainId.Kovan,\n  \"0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa\"\n);\n\nexport const BSC = new NativeCurrency(\"BSC\", \"BNB\", ChainId.BSC);\nexport const BSC_Testnet = new Token(\n  \"BSC Testnet\",\n  \"tBNB\",\n  ChainId.BSC_Testnet,\n  \"0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa\"\n);\n\nexport const FTM = new NativeCurrency(\"Fantom\", \"FTM\", ChainId.FTM);\nexport const FTM_Testnet = new Token(\n  \"FTM Testnet\",\n  \"tFTM\",\n  ChainId.FTM_Testnet,\n  \"0x23aDdd9b36ae4E5B83a70bbBF93709C44299A565\"\n);\n\nexport const MTV = new NativeCurrency(\"MultiVAC\", \"MTV\", ChainId.MultiVAC);\n\nexport const Findora = new NativeCurrency(\"Findora\", \"FRA\", ChainId.Findora);\nexport const Findora_Testnet = new Token(\"FRA Testnet\",\"tFRA\",ChainId.Findora_Testnet,\"0x8924755a7FB45bF0A37A6A773795CFa878114A26\");\n\nexport const NATIVE_CURRENCY = {\n  [ChainId.Mainnet]: Ether,\n  [ChainId.Kovan]: KovanEther,\n  [ChainId.BSC]: BSC,\n  [ChainId.BSC_Testnet]: BSC_Testnet,\n  [ChainId.FTM]: FTM,\n  [ChainId.FTM_Testnet]: FTM_Testnet,\n  [ChainId.MultiVAC]: MTV,\n  [ChainId.Findora]: Findora,\n  [ChainId.Findora_Testnet]: Findora_Testnet\n};\n","// @ts-nocheck\r\n/// Blacklist of scam tokens\r\n\r\nexport const BLACKLISTED_ADDRESSES = [\r\n  //\"0x119e2ad8f0c85c6f61afdf0df69693028cdc10be\",\r\n  ];\r\n  \r\n  export const BlacklistId = new Map([\r\n  //[\"0x119e2ad8f0c85c6f61afdf0df69693028cdc10be\", \"Zepe.io\"],\r\n  ]);\r\n  ","import { createContext, useContext } from \"react\";\nimport { Action } from \"./callsReducer\";\nimport { ChainState } from \"./model\";\n\nexport const ChainStateContext = createContext<{\n  value?: {\n    blockNumber: number;\n    state?: ChainState;\n    error?: unknown;\n  };\n  multicallAddress: string | undefined;\n  dispatchCalls: (action: Action) => void;\n}>({\n  multicallAddress: \"\",\n  dispatchCalls: () => {\n    // empty\n  }\n});\n\nexport function useChainState() {\n  return useContext(ChainStateContext);\n}\n","// @ts-nocheck\n\nimport { useContext, useEffect, useMemo } from \"react\";\nimport { ChainCall } from \"../providers/chainState/callsReducer\";\nimport { ChainStateContext } from \"../providers/chainState/context\";\nimport { Falsy } from \"../model/types\";\n\nexport function useChainCalls(calls: (ChainCall | Falsy)[]) {\n  const { dispatchCalls, value } = useContext(ChainStateContext);\n\n  useEffect(() => {\n    const filteredCalls = calls.filter(Boolean) as ChainCall[];\n    dispatchCalls({ type: \"ADD_CALLS\", calls: filteredCalls });\n    return () => dispatchCalls({ type: \"REMOVE_CALLS\", calls: filteredCalls });\n  }, [JSON.stringify(calls), dispatchCalls]);\n\n  return useMemo(\n    () => calls.map((call) => call && value?.state?.[call.address]?.[call.data]),\n    [JSON.stringify(calls), value]\n  );\n}\n\nexport function useChainCall(call: ChainCall | Falsy) {\n  return useChainCalls([call])[0];\n}\n","import { useContext } from \"react\";\nimport { ChainStateContext } from \"../providers/chainState/context\";\n\nexport function useMulticallAddress(): string | undefined {\n  return useContext(ChainStateContext).multicallAddress;\n}\n","import { MultiCallABI } from \"../constants\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { useChainCall } from \"./useChainCalls\";\nimport { useMulticallAddress } from \"./useMulticallAddress\";\n\nconst GET_CURRENT_BLOCK_TIMESTAMP_CALL = MultiCallABI.encodeFunctionData(\n  \"getCurrentBlockTimestamp\",\n  []\n);\nconst GET_CURRENT_BLOCK_DIFFICULTY_CALL = MultiCallABI.encodeFunctionData(\n  \"getCurrentBlockDifficulty\",\n  []\n);\n\nexport function useBlockMeta() {\n  const address = useMulticallAddress();\n  const timestamp = useChainCall(address && { address, data: GET_CURRENT_BLOCK_TIMESTAMP_CALL });\n  const difficulty = useChainCall(address && { address, data: GET_CURRENT_BLOCK_DIFFICULTY_CALL });\n\n  return {\n    timestamp:\n      timestamp !== undefined\n        ? new Date(BigNumber.from(timestamp).mul(1000).toNumber())\n        : undefined,\n    difficulty: difficulty !== undefined ? BigNumber.from(difficulty) : undefined\n  };\n}\n","import { useEffect, useState } from \"react\";\n\n// modified from https://usehooks.com/useDebounce/\nexport function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import { useEffect, useState } from \"react\";\n\n// modified from https://usehooks.com/useDebounce/\nexport function useDebouncePair<T, U>(first: T, second: U, delay: number): [T, U] {\n  const [debouncedValue, setDebouncedValue] = useState<[T, U]>([first, second]);\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue([first, second]);\n    }, delay);\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [first, second, delay]);\n\n  return debouncedValue;\n}\n","import { ChainId } from \"../../constants\";\nimport { FullConfig } from \"./Config\";\n\nexport const DEFAULT_CONFIG: FullConfig = {\n  pollingInterval: 15000,\n  supportedChains: [\n    ChainId.Mainnet,\n    ChainId.Goerli,\n    ChainId.Kovan,\n    ChainId.Rinkeby,\n    ChainId.Ropsten,\n    ChainId.xDai,\n    ChainId.Localhost,\n    ChainId.Hardhat,\n    ChainId.Polygon,\n    ChainId.Mumbai,\n    ChainId.Harmony,\n    ChainId.Moonriver,\n    ChainId.BSC,\n    ChainId.BSC_Testnet,\n    ChainId.FTM,\n    ChainId.FTM_Testnet,\n    ChainId.MultiVAC\n  ],\n  notifications: {\n    checkInterval: 500,\n    expirationPeriod: 5000\n  }\n};\n","import { createContext, useContext } from \"react\";\nimport { FullConfig, Config } from \"../../model/config/Config\";\nimport { DEFAULT_CONFIG } from \"../../model/config/default\";\n\nexport const ConfigContext = createContext<{\n  config: FullConfig;\n  updateConfig: (config: Config) => void;\n}>({\n  config: DEFAULT_CONFIG,\n  updateConfig: () => undefined\n});\n\nexport function useConfig() {\n  const { config } = useContext(ConfigContext);\n  return config;\n}\n\nexport function useUpdateConfig() {\n  const { updateConfig } = useContext(ConfigContext);\n  return updateConfig;\n}\n","// @ts-nocheck\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { ChainId } from \"../constants\";\nimport { useCallback } from \"react\";\nimport { useConfig } from \"../providers/config/context\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\n\ntype ActivateBrowserWallet = (onError?: (error: Error) => void, throwErrors?: boolean) => void;\n\nexport type Web3Ethers = ReturnType<typeof useWeb3React> & {\n  library?: Web3Provider;\n  chainId?: ChainId;\n  activateBrowserWallet: ActivateBrowserWallet;\n};\n\nexport function useEthers(): Web3Ethers {\n  const result = useWeb3React<Web3Provider>();\n  const { supportedChains } = useConfig();\n  const activateBrowserWallet = useCallback<ActivateBrowserWallet>(\n    async (onError, throwErrors) => {\n      const injected = new InjectedConnector({ supportedChainIds: supportedChains });\n      if (onError instanceof Function) {\n        await result.activate(injected, onError, throwErrors);\n      } else {\n        await result.activate(injected, undefined, throwErrors);\n      }\n    },\n    [supportedChains]\n  );\n  return { ...result, activateBrowserWallet };\n}\n","// @ts-nocheck\n\nimport { Interface } from \"@ethersproject/abi\";\nimport { useMemo } from \"react\";\nimport { Falsy } from \"../model/types\";\nimport { useChainCalls } from \"./useChainCalls\";\nimport { ChainCall } from \"../providers/chainState/callsReducer\";\n\nfunction warnOnInvalidContractCall(call: ContractCall | Falsy) {\n  console.warn(\n    `Invalid contract call: address=${call && call.address} method=${call && call.method} args=${\n      call && call.args\n    }`\n  );\n}\n\nfunction encodeCallData(call: ContractCall | Falsy): ChainCall | Falsy {\n  try {\n    return (\n      call && { address: call.address, data: call.abi.encodeFunctionData(call.method, call.args) }\n    );\n  } catch {\n    warnOnInvalidContractCall(call);\n    return undefined;\n  }\n}\n\nexport interface ContractCall {\n  abi: Interface;\n  address: string;\n  method: string;\n  args: any[];\n}\n\nexport function useContractCall(call: ContractCall | Falsy): any[] | undefined {\n  return useContractCalls([call])[0];\n}\n\nexport function useContractCalls(calls: (ContractCall | Falsy)[]): (any[] | undefined)[] {\n  const results = useChainCalls(calls.map(encodeCallData));\n\n  return useMemo(\n    () =>\n      results.map((result, idx) => {\n        const call = calls[idx];\n        if (result === \"0x\") {\n          warnOnInvalidContractCall(call);\n          return undefined;\n        }\n        return call && result\n          ? (call.abi.decodeFunctionResult(call.method, result) as any[])\n          : undefined;\n      }),\n    [results]\n  );\n}\n","import { FullConfig, Config } from \"../../../..\";\nimport merge from \"lodash.merge\";\n\nexport function configReducer(state: FullConfig, action: Config): FullConfig {\n  return merge({}, state, action);\n}\n","import { ReactNode, useReducer } from \"react\";\nimport { Config } from \"../../model/config/Config\";\nimport { DEFAULT_CONFIG } from \"../../model/config/default\";\nimport { ConfigContext } from \"./context\";\nimport { configReducer } from \"./reducer\";\n\ninterface ConfigProviderProps {\n  children: ReactNode;\n  config: Config;\n}\n\nexport function ConfigProvider({ config, children }: ConfigProviderProps) {\n  const [reducedConfig, dispatch] = useReducer(configReducer, { ...DEFAULT_CONFIG, ...config });\n  return (\n    <ConfigContext.Provider\n      value={{ config: reducedConfig, updateConfig: dispatch }}\n      children={children}\n    />\n  );\n}\n","import { createContext, useContext } from \"react\";\n\nexport const BlockNumberContext = createContext<number | undefined>(undefined);\n\nexport function useBlockNumber() {\n  return useContext(BlockNumberContext);\n}\n","interface BlockNumberState {\n  [chainId: number]: number | undefined;\n}\n\ninterface BlockNumberChanged {\n  chainId: number;\n  blockNumber: number;\n}\n\nexport function blockNumberReducer(state: BlockNumberState = {}, action: BlockNumberChanged) {\n  const current = state[action.chainId];\n  if (!current || action.blockNumber > current) {\n    return {\n      ...state,\n      [action.chainId]: action.blockNumber\n    };\n  }\n  return state;\n}\n","import { useEffect, useReducer, ReactNode } from \"react\";\nimport { BlockNumberContext } from \"./context\";\nimport { blockNumberReducer } from \"./reducer\";\nimport { useEthers, useDebounce } from \"../../hooks\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport function BlockNumberProvider({ children }: Props) {\n  const { library, chainId } = useEthers();\n  const [state, dispatch] = useReducer(blockNumberReducer, {});\n\n  useEffect(() => {\n    if (library && chainId !== undefined) {\n      const update = (blockNumber: number) => dispatch({ chainId, blockNumber });\n      library.on(\"block\", update);\n      return () => {\n        library.off(\"block\", update);\n      };\n    }\n  }, [library, chainId]);\n\n  const debouncedState = useDebounce(state, 100);\n  const blockNumber = chainId !== undefined ? debouncedState[chainId] : undefined;\n\n  return <BlockNumberContext.Provider value={blockNumber} children={children} />;\n}\n","export type Action = AddCall | RemoveCall;\n\nexport interface ChainCall {\n  address: string;\n  data: string;\n}\n\ninterface AddCall {\n  type: \"ADD_CALLS\";\n  calls: ChainCall[];\n}\n\ninterface RemoveCall {\n  type: \"REMOVE_CALLS\";\n  calls: ChainCall[];\n}\n\nexport function callsReducer(state: ChainCall[] = [], action: Action) {\n  if (action.type === \"ADD_CALLS\") {\n    return [...state, ...action.calls];\n  } else {\n    let finalState = state;\n    for (const call of action.calls) {\n      const index = finalState.findIndex((x) => x.address === call.address && x.data === call.data);\n      if (index !== -1) {\n        finalState = finalState.filter((_, i) => i !== index);\n      }\n    }\n    return finalState;\n  }\n}\n","import { ChainState } from \"./model\";\n\nexport interface State {\n  [chainId: number]:\n    | {\n        blockNumber: number;\n        state?: ChainState;\n        error?: unknown;\n      }\n    | undefined;\n}\n\ntype Action = FetchSuccess | FetchError;\n\ninterface FetchSuccess {\n  type: \"FETCH_SUCCESS\";\n  chainId: number;\n  blockNumber: number;\n  state: ChainState;\n}\n\ninterface FetchError {\n  type: \"FETCH_ERROR\";\n  chainId: number;\n  blockNumber: number;\n  error: unknown;\n}\n\nexport function chainStateReducer(state: State = {}, action: Action) {\n  const current = state[action.chainId]?.blockNumber;\n  if (!current || action.blockNumber >= current) {\n    if (action.type === \"FETCH_SUCCESS\") {\n      let newState = action.state;\n      if (action.blockNumber === current) {\n        // merge with existing state to prevent requests coming out of order\n        // from overwriting the data\n        const oldState = state[action.chainId]?.state ?? {};\n        for (const [address, entries] of Object.entries(oldState)) {\n          newState = {\n            ...newState,\n            [address]: {\n              ...entries,\n              ...newState[address]\n            }\n          };\n        }\n      }\n      return {\n        ...state,\n        [action.chainId]: { blockNumber: action.blockNumber, state: newState }\n      };\n    } else if (action.type === \"FETCH_ERROR\") {\n      return {\n        ...state,\n        [action.chainId]: {\n          ...state[action.chainId],\n          blockNumber: action.blockNumber,\n          error: action.error\n        }\n      };\n    }\n  }\n  return state;\n}\n","import { ChainId } from \"../constants\";\nimport { ChainCall, ChainState } from \"./chainState\";\n\n// NOTE: If you modify this file please ensure consistency with\n// packages/extension/src/providers/events/Message.ts\n\ninterface Init {\n  type: \"INIT\";\n}\n\ninterface NetworkChanged {\n  type: \"NETWORK_CHANGED\";\n  chainId?: ChainId;\n  multicallAddress?: string;\n}\n\ninterface BlockNumberChanged {\n  type: \"BLOCK_NUMBER_CHANGED\";\n  chainId: ChainId;\n  blockNumber: number;\n}\n\ninterface AccountChanged {\n  type: \"ACCOUNT_CHANGED\";\n  address?: string;\n}\n\ninterface CallsChanged {\n  type: \"CALLS_CHANGED\";\n  chainId?: ChainId;\n  calls: ChainCall[];\n}\n\ninterface MulticallSuccess {\n  type: \"MULTICALL_SUCCESS\";\n  multicallAddress: string;\n  duration: number;\n  chainId: ChainId;\n  blockNumber: number;\n  state: ChainState;\n}\n\ninterface MulticallError {\n  type: \"MULTICALL_ERROR\";\n  multicallAddress: string;\n  duration: number;\n  calls: ChainCall[];\n  chainId: ChainId;\n  blockNumber: number;\n  error: any;\n}\n\ninterface GenericError {\n  type: \"GENERIC_ERROR\";\n  error: Error;\n}\n\ntype Notification =\n  | Init\n  | NetworkChanged\n  | BlockNumberChanged\n  | AccountChanged\n  | CallsChanged\n  | MulticallSuccess\n  | MulticallError\n  | GenericError;\n\nlet hook: any;\nif (typeof window !== \"undefined\") {\n  hook = (window as any).__USEDAPP_DEVTOOLS_HOOK__;\n}\n\n// immediately notify devtools that the page is using it\nnotifyDevtools({ type: \"INIT\" });\n\nexport function notifyDevtools(notification: Notification) {\n  if (!hook) {\n    return;\n  }\n  if (notification.type === \"INIT\") {\n    hook.init();\n  } else {\n    if (notification.type === \"MULTICALL_ERROR\" || notification.type === \"GENERIC_ERROR\") {\n      notification.error = getErrorMessage(notification.error);\n    }\n    hook.send(notification);\n  }\n}\n\nfunction getErrorMessage(error: unknown) {\n  if (error instanceof Error) {\n    return error.message;\n  } else {\n    return \"\" + error;\n  }\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Provider } from \"@ethersproject/providers\";\nimport { ChainCall } from \"./callsReducer\";\nimport { ChainState } from \"./model\";\n\nconst ABI = [\n  \"function aggregate(tuple(address target, bytes callData)[] calls) view returns (uint256 blockNumber, bytes[] returnData)\"\n];\n\nexport async function multicall(\n  provider: Provider,\n  address: string,\n  blockNumber: number,\n  requests: ChainCall[]\n): Promise<ChainState> {\n  if (requests.length === 0) {\n    return {};\n  }\n  const contract = new Contract(address, ABI, provider);\n  const [, results]: [BigNumber, string[]] = await contract.aggregate(\n    requests.map(({ address, data }) => [address, data]),\n    { blockTag: blockNumber }\n  );\n  const state: ChainState = {};\n  for (let i = 0; i < requests.length; i++) {\n    const { address, data } = requests[i];\n    const result = results[i];\n    const stateForAddress = state[address] ?? {};\n    stateForAddress[data] = result;\n    state[address] = stateForAddress;\n  }\n  return state;\n}\n","// @ts-nocheck\n\nimport { ReactNode, useEffect, useReducer } from \"react\";\nimport { useDebouncePair, useEthers } from \"../../hooks\";\nimport { useBlockNumber } from \"../blockNumber/context\";\nimport { ChainStateContext } from \"./context\";\nimport { chainStateReducer } from \"./chainStateReducer\";\nimport { callsReducer, ChainCall } from \"./callsReducer\";\nimport { multicall } from \"./multicall\";\nimport { notifyDevtools } from \"../devtools\";\nimport { useDevtoolsReporting } from \"./useDevtoolsReporting\";\n\ninterface Props {\n  children: ReactNode;\n  multicallAddresses: {\n    [chainId: number]: string;\n  };\n}\n\nexport function ChainStateProvider({ children, multicallAddresses }: Props) {\n  const { library, chainId } = useEthers();\n  const blockNumber = useBlockNumber();\n  const [calls, dispatchCalls] = useReducer(callsReducer, []);\n  const [state, dispatchState] = useReducer(chainStateReducer, {});\n\n  const [debouncedCalls, debouncedId] = useDebouncePair(calls, chainId, 50);\n  const uniqueCalls = debouncedId === chainId ? getUnique(debouncedCalls) : [];\n  // used for deep equality in hook dependencies\n  const uniqueCallsJSON = JSON.stringify(uniqueCalls);\n\n  const multicallAddress = chainId !== undefined ? multicallAddresses[chainId] : undefined;\n\n  useDevtoolsReporting(uniqueCallsJSON, uniqueCalls, blockNumber, multicallAddresses);\n\n  useEffect(() => {\n    if (library && blockNumber !== undefined && chainId !== undefined) {\n      if (!multicallAddress) {\n        console.error(`Missing multicall address for chain id ${chainId}`);\n        return;\n      }\n      const start = Date.now();\n      multicall(library, multicallAddress, blockNumber, uniqueCalls)\n        .then((state) => {\n          dispatchState({ type: \"FETCH_SUCCESS\", blockNumber, chainId, state });\n          notifyDevtools({\n            type: \"MULTICALL_SUCCESS\",\n            duration: Date.now() - start,\n            chainId,\n            blockNumber,\n            multicallAddress,\n            state\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n          dispatchState({ type: \"FETCH_ERROR\", blockNumber, chainId, error });\n          notifyDevtools({\n            type: \"MULTICALL_ERROR\",\n            duration: Date.now() - start,\n            chainId,\n            blockNumber,\n            multicallAddress,\n            calls: uniqueCalls,\n            error\n          });\n        });\n    }\n  }, [library, blockNumber, chainId, multicallAddress, uniqueCallsJSON]);\n\n  const value = chainId !== undefined ? state[chainId] : undefined;\n  const provided = { value, multicallAddress, dispatchCalls };\n\n  return <ChainStateContext.Provider value={provided} children={children} />;\n}\n\nfunction getUnique(requests: ChainCall[]) {\n  const unique: ChainCall[] = [];\n  for (const request of requests) {\n    if (!unique.find((x) => x.address === request.address && x.data === request.data)) {\n      unique.push(request);\n    }\n  }\n  return unique;\n}\n","// @ts-nocheck\n\nimport { useEffect } from \"react\";\nimport { useEthers } from \"../../hooks\";\nimport { notifyDevtools } from \"../devtools\";\nimport { ChainCall } from \"./callsReducer\";\n\nexport function useDevtoolsReporting(\n  uniqueCallsJSON: string,\n  uniqueCalls: ChainCall[],\n  blockNumber: number | undefined,\n  multicallAddresses: { [network: string]: string }\n) {\n  const { chainId, account, error } = useEthers();\n\n  const multicall = chainId !== undefined ? multicallAddresses[chainId] : undefined;\n\n  useEffect(() => {\n    notifyDevtools({ type: \"NETWORK_CHANGED\", chainId, multicallAddress: multicall });\n  }, [chainId, multicall]);\n\n  useEffect(() => {\n    notifyDevtools({ type: \"ACCOUNT_CHANGED\", address: account ?? undefined });\n  }, [account]);\n\n  useEffect(() => {\n    notifyDevtools({ type: \"CALLS_CHANGED\", chainId, calls: uniqueCalls });\n  }, [uniqueCallsJSON]);\n\n  useEffect(() => {\n    if (chainId !== undefined && blockNumber !== undefined) {\n      notifyDevtools({ type: \"BLOCK_NUMBER_CHANGED\", chainId, blockNumber });\n    }\n  }, [blockNumber, chainId]);\n\n  useEffect(() => {\n    if (error !== undefined) {\n      notifyDevtools({ type: \"GENERIC_ERROR\", error });\n    }\n  }, [error]);\n}\n","import { Web3Provider } from \"@ethersproject/providers\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { ReactNode } from \"react\";\n\nconst DEFAULT_POLLING_INTERVAL = 15000;\n\ninterface EthersProviderProps {\n  children: ReactNode;\n  pollingInterval?: number;\n}\n\nexport function EthersProvider({ children, pollingInterval }: EthersProviderProps) {\n  function getLibrary(provider: any): Web3Provider {\n    const library = new Web3Provider(provider, \"any\");\n    library.pollingInterval = pollingInterval || DEFAULT_POLLING_INTERVAL;\n    return library;\n  }\n  return <Web3ReactProvider getLibrary={getLibrary}>{children}</Web3ReactProvider>;\n}\n","import { TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { ChainId } from \"../../constants\";\n\ntype NotificationPayload = { submittedAt: number } & (\n  | { type: \"transactionStarted\"; transaction: TransactionResponse; transactionName?: string }\n  | {\n      type: \"transactionSucceed\";\n      transaction: TransactionResponse;\n      receipt: TransactionReceipt;\n      transactionName?: string;\n    }\n  | {\n      type: \"transactionFailed\";\n      transaction: TransactionResponse;\n      receipt: TransactionReceipt;\n      transactionName?: string;\n    }\n  | { type: \"walletConnected\"; address: string }\n);\n\nexport type Notification = { id: string } & NotificationPayload;\n\nexport type AddNotificationPayload = {\n  chainId: ChainId;\n  notification: NotificationPayload;\n};\n\nexport type RemoveNotificationPayload = {\n  chainId: ChainId;\n  notificationId: string;\n};\n\nexport type Notifications = {\n  [T in ChainId]?: Notification[];\n};\n\nexport const DEFAULT_NOTIFICATIONS: Notifications = {};\n","import { createContext, useContext } from \"react\";\nimport {\n  Notifications,\n  DEFAULT_NOTIFICATIONS,\n  AddNotificationPayload,\n  RemoveNotificationPayload\n} from \"./model\";\n\nexport const NotificationsContext = createContext<{\n  notifications: Notifications;\n  addNotification: (payload: AddNotificationPayload) => void;\n  removeNotification: (payload: RemoveNotificationPayload) => void;\n}>({\n  notifications: DEFAULT_NOTIFICATIONS,\n  addNotification: () => undefined,\n  removeNotification: () => undefined\n});\n\nexport function useNotificationsContext() {\n  return useContext(NotificationsContext);\n}\n","import { ChainId } from \"../../constants\";\nimport { Notification, Notifications } from \"./model\";\n\ninterface AddNotification {\n  type: \"ADD_NOTIFICATION\";\n  chainId: ChainId;\n  notification: Notification;\n}\n\ninterface RemoveNotification {\n  type: \"REMOVE_NOTIFICATION\";\n  chainId: ChainId;\n  notificationId: string;\n}\n\ntype Action = AddNotification | RemoveNotification;\n\nexport function notificationReducer(state: Notifications, action: Action): Notifications {\n  const { chainId } = action;\n  const chainState = state[chainId] ?? [];\n\n  switch (action.type) {\n    case \"ADD_NOTIFICATION\":\n      return {\n        ...state,\n        [chainId]: [action.notification, ...chainState]\n      };\n    case \"REMOVE_NOTIFICATION\": {\n      return {\n        ...state,\n        [chainId]: chainState.filter((notification) => notification.id !== action.notificationId)\n      };\n    }\n  }\n}\n","import { ReactNode, useCallback, useEffect, useReducer } from \"react\";\nimport { useEthers } from \"../../hooks\";\nimport { NotificationsContext } from \"./context\";\nimport { AddNotificationPayload, DEFAULT_NOTIFICATIONS, RemoveNotificationPayload } from \"./model\";\nimport { notificationReducer } from \"./reducer\";\nimport { nanoid } from \"nanoid\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport function NotificationsProvider({ children }: Props) {\n  const [notifications, dispatch] = useReducer(notificationReducer, DEFAULT_NOTIFICATIONS);\n  const { chainId, account } = useEthers();\n\n  useEffect(() => {\n    if (account && chainId) {\n      dispatch({\n        type: \"ADD_NOTIFICATION\",\n        chainId: chainId,\n        notification: {\n          type: \"walletConnected\",\n          id: nanoid(),\n          submittedAt: Date.now(),\n          address: account\n        }\n      });\n    }\n  }, [account, chainId]);\n\n  const addNotification = useCallback(\n    ({ notification, chainId }: AddNotificationPayload) => {\n      dispatch({\n        type: \"ADD_NOTIFICATION\",\n        chainId,\n        notification: { ...notification, id: nanoid() }\n      });\n    },\n    [dispatch]\n  );\n\n  const removeNotification = useCallback(\n    ({ notificationId, chainId }: RemoveNotificationPayload) => {\n      dispatch({\n        type: \"REMOVE_NOTIFICATION\",\n        chainId,\n        notificationId\n      });\n    },\n    [dispatch]\n  );\n\n  return (\n    <NotificationsContext.Provider\n      value={{ addNotification, notifications, removeNotification }}\n      children={children}\n    />\n  );\n}\n","// @ts-nocheck\n\nimport { NetworkConnector } from \"@web3-react/network-connector\";\nimport { useEffect } from \"react\";\nimport { useEthers } from \"../hooks\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { useConfig } from \"./config/context\";\n\nexport function NetworkActivator() {\n  const { activate, account, chainId: connectedChainId, active, connector } = useEthers();\n  const { supportedChains, readOnlyChainId, readOnlyUrls } = useConfig();\n\n  useEffect(() => {\n    const eagerConnect = async () => {\n      const injected = new InjectedConnector({ supportedChainIds: supportedChains });\n      if (await injected.isAuthorized()) {\n        activate(injected);\n      }\n    };\n    eagerConnect();\n  }, []);\n\n  useEffect(() => {\n    if (readOnlyChainId && readOnlyUrls) {\n      if (\n        !active ||\n        (connector instanceof NetworkConnector && connectedChainId !== readOnlyChainId)\n      ) {\n        activate(\n          new NetworkConnector({ defaultChainId: readOnlyChainId, urls: readOnlyUrls || [] })\n        );\n      }\n    }\n  }, [readOnlyChainId, readOnlyUrls, active, account, connectedChainId, connector]);\n\n  return null;\n}\n","import { TransactionReceipt, TransactionResponse } from \"@ethersproject/providers\";\nimport { ChainId } from \"../../constants\";\n\nexport interface StoredTransaction {\n  transaction: TransactionResponse;\n  submittedAt: number;\n  receipt?: TransactionReceipt;\n  lastCheckedBlockNumber?: number;\n  transactionName?: string;\n}\n\nexport function getStoredTransactionState(transaction: StoredTransaction) {\n  if (transaction.receipt) {\n    return transaction?.receipt.status === 0 ? \"Fail\" : \"Success\";\n  }\n  return \"Mining\";\n}\n\nexport type StoredTransactions = {\n  [T in ChainId]?: StoredTransaction[];\n};\n\nexport const DEFAULT_STORED_TRANSACTIONS: StoredTransactions = {};\n","import { createContext, useContext } from \"react\";\nimport { DEFAULT_STORED_TRANSACTIONS, StoredTransaction, StoredTransactions } from \"./model\";\n\nexport const TransactionsContext = createContext<{\n  transactions: StoredTransactions;\n  addTransaction: (payload: StoredTransaction) => void;\n}>({\n  transactions: DEFAULT_STORED_TRANSACTIONS,\n  addTransaction: () => undefined\n});\n\nexport function useTransactionsContext() {\n  return useContext(TransactionsContext);\n}\n","import { ChainId } from \"../../constants\";\nimport { StoredTransaction, StoredTransactions } from \"./model\";\n\ntype Action = AddTransaction | UpdateTransactions;\n\ninterface AddTransaction {\n  type: \"ADD_TRANSACTION\";\n  payload: StoredTransaction;\n}\ninterface UpdateTransactions {\n  type: \"UPDATE_TRANSACTIONS\";\n  chainId: ChainId;\n  transactions: StoredTransaction[];\n}\n\nfunction isChainId(chainId: number): chainId is ChainId {\n  return Object.values(ChainId).includes(chainId);\n}\n\nexport function transactionReducer(state: StoredTransactions, action: Action): StoredTransactions {\n  switch (action.type) {\n    case \"ADD_TRANSACTION\": {\n      const { chainId } = action.payload.transaction;\n\n      if (isChainId(chainId)) {\n        return {\n          ...state,\n          [chainId]: [action.payload, ...(state[chainId] ?? [])]\n        };\n      } else {\n        throw TypeError(\"Unsupported chain\");\n      }\n    }\n    case \"UPDATE_TRANSACTIONS\":\n      return { ...state, [action.chainId]: [...action.transactions] };\n  }\n}\n","// @ts-nocheck\n\nimport { ReactNode, useCallback, useEffect, useReducer } from \"react\";\nimport { useEthers, useLocalStorage } from \"../../hooks\";\nimport { useBlockNumber } from \"../blockNumber/context\";\nimport { useNotificationsContext } from \"../notifications/context\";\nimport { TransactionsContext } from \"./context\";\nimport { DEFAULT_STORED_TRANSACTIONS, StoredTransaction } from \"./model\";\nimport { transactionReducer } from \"./reducer\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport function TransactionProvider({ children }: Props) {\n  const { chainId, library } = useEthers();\n  const blockNumber = useBlockNumber();\n  const [storage, setStorage] = useLocalStorage(\"transactions\");\n  const [transactions, dispatch] = useReducer(\n    transactionReducer,\n    storage ?? DEFAULT_STORED_TRANSACTIONS\n  );\n  const { addNotification } = useNotificationsContext();\n\n  useEffect(() => {\n    setStorage(transactions);\n  }, [transactions]);\n\n  const addTransaction = useCallback(\n    (payload: StoredTransaction) => {\n      dispatch({\n        type: \"ADD_TRANSACTION\",\n        payload\n      });\n      addNotification({\n        notification: {\n          type: \"transactionStarted\",\n          transaction: payload.transaction,\n          submittedAt: payload.submittedAt,\n          transactionName: payload.transactionName\n        },\n        chainId: payload.transaction.chainId\n      });\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    const updateTransactions = async () => {\n      if (!chainId || !library || !blockNumber) {\n        return;\n      }\n\n      const checkTransaction = async (tx: StoredTransaction) => {\n        if (tx.receipt || !shouldCheck(blockNumber, tx)) {\n          return tx;\n        }\n\n        try {\n          const receipt = await library.getTransactionReceipt(tx.transaction.hash);\n          if (receipt) {\n            const type = receipt.status === 0 ? \"transactionFailed\" : \"transactionSucceed\";\n            addNotification({\n              notification: {\n                type,\n                submittedAt: Date.now(),\n                transaction: tx.transaction,\n                receipt,\n                transactionName: tx.transactionName\n              },\n              chainId\n            });\n\n            return { ...tx, receipt };\n          } else {\n            return { ...tx, lastCheckedBlockNumber: blockNumber };\n          }\n        } catch (error) {\n          console.error(`failed to check transaction hash: ${tx.transaction.hash}`, error);\n        }\n\n        return tx;\n      };\n\n      const chainTransactions = transactions[chainId] ?? [];\n      const newTransactions: StoredTransaction[] = [];\n      for (const tx of chainTransactions) {\n        const newTransaction = await checkTransaction(tx);\n        newTransactions.push(newTransaction);\n      }\n\n      dispatch({ type: \"UPDATE_TRANSACTIONS\", chainId, transactions: newTransactions });\n    };\n\n    updateTransactions();\n  }, [chainId, library, blockNumber]);\n\n  return (\n    <TransactionsContext.Provider value={{ transactions, addTransaction }} children={children} />\n  );\n}\n\nfunction shouldCheck(blockNumber: number, tx: StoredTransaction): boolean {\n  if (tx.receipt) {\n    return false;\n  }\n\n  if (!tx.lastCheckedBlockNumber) {\n    return true;\n  }\n\n  const blocksSinceCheck = blockNumber - tx.lastCheckedBlockNumber;\n  if (blocksSinceCheck < 1) {\n    return false;\n  }\n\n  const minutesPending = (Date.now() - tx.submittedAt) / 1000 / 60;\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9;\n  }\n\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2;\n  }\n\n  // otherwise every block\n  return true;\n}\n","import { ChainId, CHAIN_NAMES, LOCAL_CHAINS, TEST_CHAINS } from \"../constants\";\n\nfunction etherscanNetworkPrefix(chainId: ChainId) {\n  switch (chainId) {\n    case ChainId.Mainnet:\n      return ``;\n    case ChainId.Ropsten:\n    case ChainId.Kovan:\n    case ChainId.Rinkeby:\n    case ChainId.Goerli:\n      return getChainName(chainId).toLocaleLowerCase() + \".\";\n  }\n}\n\nexport function getExplorerAddressLink(address: string, chainId: ChainId) {\n  switch (chainId) {\n    case ChainId.Mainnet:\n    case ChainId.Ropsten:\n    case ChainId.Kovan:\n    case ChainId.Rinkeby:\n    case ChainId.Goerli:\n      return `https://${etherscanNetworkPrefix(chainId)}etherscan.io/address/${address}`;\n    case ChainId.BSC:\n      return `https://bscscan.com/address/${address}`;\n    case ChainId.xDai:\n      return `https://blockscout.com/poa/xdai/address/${address}/transactions`;\n    case ChainId.Polygon:\n      return `https://explorer-mainnet.maticvigil.com/address/${address}/transactions`;\n    case ChainId.Mumbai:\n      return `https://explorer-mumbai.maticvigil.com/address/${address}/transactions`;\n    case ChainId.Harmony:\n      return `https://explorer.harmony.one/address/${address}`;\n    case ChainId.Moonriver:\n      return `https://blockscout.moonriver.moonbeam.network/address/${address}/transactions`;\n  }\n}\n\nexport function getExplorerTransactionLink(transactionHash: string, chainId: ChainId) {\n  switch (chainId) {\n    case ChainId.Mainnet:\n    case ChainId.Ropsten:\n    case ChainId.Kovan:\n    case ChainId.Rinkeby:\n    case ChainId.Goerli:\n      return `https://${etherscanNetworkPrefix(chainId)}etherscan.io/tx/${transactionHash}`;\n    case ChainId.BSC:\n      return `https://bscscan.com/tx/${transactionHash}`;\n    case ChainId.xDai:\n      return `https://blockscout.com/poa/xdai/tx/${transactionHash}/internal-transactions`;\n    case ChainId.Polygon:\n      return `https://explorer-mainnet.maticvigil.com/tx/${transactionHash}/internal-transactions`;\n    case ChainId.Mumbai:\n      return `https://explorer-mumbai.maticvigil.com/tx/${transactionHash}/internal-transactions`;\n    case ChainId.Harmony:\n      return `https://explorer.harmony.one/tx/${transactionHash}`;\n    case ChainId.Moonriver:\n      return `https://blockscout.moonriver.moonbeam.network/tx/${transactionHash}/internal-transactions`;\n  }\n}\n\nexport function getChainName(chainId: ChainId) {\n  return CHAIN_NAMES[chainId];\n}\n\nexport function isTestChain(chainId: ChainId) {\n  return TEST_CHAINS.includes(chainId);\n}\n\nexport function isLocalChain(chainId: ChainId) {\n  return LOCAL_CHAINS.includes(chainId);\n}\n","// @ts-nocheck\n\nimport { ReactNode, useEffect, useState } from \"react\";\nimport { isLocalChain } from \"../helpers\";\nimport { useEthers } from \"../hooks\";\nimport { useBlockNumber } from \"./blockNumber\";\nimport { useConfig, useUpdateConfig } from \"./config\";\nimport multicallABI from \"../constants/abi/MultiCall.json\";\nimport { deployContract } from \"../helpers/contract\";\n\ninterface LocalMulticallProps {\n  children: ReactNode;\n}\n\nenum LocalMulticallState {\n  Unknown,\n  NonLocal,\n  Deploying,\n  Deployed,\n  Error\n}\n\nexport function LocalMulticallProvider({ children }: LocalMulticallProps) {\n  const updateConfig = useUpdateConfig();\n  const { multicallAddresses } = useConfig();\n  const { library, chainId } = useEthers();\n  const [localMulticallState, setLocalMulticallState] = useState(LocalMulticallState.Unknown);\n  const [multicallBlockNumber, setMulticallBlockNumber] = useState<number>();\n  const blockNumber = useBlockNumber();\n\n  useEffect(() => {\n    if (!library || !chainId) {\n      setLocalMulticallState(LocalMulticallState.Unknown);\n    } else if (!isLocalChain(chainId)) {\n      setLocalMulticallState(LocalMulticallState.NonLocal);\n    } else if (multicallAddresses && multicallAddresses[chainId]) {\n      setLocalMulticallState(LocalMulticallState.Deployed);\n    } else if (localMulticallState !== LocalMulticallState.Deploying) {\n      const signer = library.getSigner();\n      if (!signer) {\n        setLocalMulticallState(LocalMulticallState.Error);\n        return;\n      }\n\n      setLocalMulticallState(LocalMulticallState.Deploying);\n\n      const deployMulticall = async () => {\n        try {\n          const { contractAddress, blockNumber } = await deployContract(multicallABI, signer);\n          updateConfig({ multicallAddresses: { [chainId]: contractAddress } });\n          setMulticallBlockNumber(blockNumber);\n          setLocalMulticallState(LocalMulticallState.Deployed);\n        } catch {\n          setLocalMulticallState(LocalMulticallState.Error);\n        }\n      };\n      deployMulticall();\n    }\n  }, [library, chainId]);\n\n  const awaitingMulticallBlock =\n    multicallBlockNumber && blockNumber && blockNumber < multicallBlockNumber;\n\n  if (\n    localMulticallState === LocalMulticallState.Deploying ||\n    (localMulticallState === LocalMulticallState.Deployed && awaitingMulticallBlock)\n  ) {\n    return <div>Deploying multicall...</div>;\n  } else if (localMulticallState === LocalMulticallState.Error) {\n    return <div>Error deploying multicall contract</div>;\n  } else {\n    return <>{children}</>;\n  }\n}\n","export function shortenString(str: string) {\n  return str.substring(0, 6) + \"...\" + str.substring(str.length - 4);\n}\n","import { utils } from \"ethers\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Falsy } from \"../model/types\";\nimport { shortenString } from \"./common\";\n\nexport function shortenAddress(address: string): string {\n  try {\n    const formattedAddress = utils.getAddress(address);\n    return shortenString(formattedAddress);\n  } catch {\n    throw new TypeError(\"Invalid input, address can't be parsed\");\n  }\n}\n\nexport function shortenIfAddress(address: string | Falsy): string {\n  if (typeof address === \"string\" && address.length > 0) {\n    return shortenAddress(address);\n  }\n  return \"\";\n}\n\nexport function compareAddress(firstAddress: string, secondAddress: string): number {\n  try {\n    const parsedFirstAddress = BigNumber.from(firstAddress);\n    const parsedSecondAddress = BigNumber.from(secondAddress);\n\n    if (parsedFirstAddress.gt(parsedSecondAddress)) {\n      return 1;\n    }\n\n    if (parsedFirstAddress.lt(parsedSecondAddress)) {\n      return -1;\n    }\n\n    return 0;\n  } catch {\n    throw new TypeError(\"Invalid input, address can't be parsed\");\n  }\n}\n\nexport function addressEqual(firstAddress: string, secondAddress: string): boolean {\n  try {\n    return utils.getAddress(firstAddress) === utils.getAddress(secondAddress);\n  } catch {\n    throw new TypeError(\"Invalid input, address can't be parsed\");\n  }\n}\n","import { Falsy } from \"../model/types\";\nimport { shortenString } from \"./common\";\n\nexport function shortenTransactionHash(transactionHash: string): string {\n  if (transactionHash.length < 10) {\n    throw new TypeError(\"Invalid input, transaction hash need to have at least 10 characters\");\n  }\n\n  return shortenString(transactionHash);\n}\n\nexport function shortenIfTransactionHash(transactionHash: string | Falsy): string {\n  if (typeof transactionHash === \"string\" && transactionHash.length > 0) {\n    return shortenTransactionHash(transactionHash);\n  }\n  return \"\";\n}\n","import { ContractFactory, ethers } from \"ethers\";\n\ninterface ContractAbi {\n  abi: ethers.ContractInterface;\n  bytecode: ethers.utils.BytesLike;\n}\n\nexport async function deployContract(\n  contractAbi: ContractAbi,\n  signer: ethers.providers.JsonRpcSigner\n): Promise<ethers.providers.TransactionReceipt> {\n  const factory = new ContractFactory(contractAbi.abi, contractAbi.bytecode, signer);\n  const contract = await factory.deploy();\n  return await contract.deployTransaction.wait();\n}\n","import { ReactNode } from \"react\";\nimport { MULTICALL_ADDRESSES } from \"../constants\";\nimport { Config } from \"../model/config/Config\";\nimport { ConfigProvider } from \"../providers/config/provider\";\nimport { BlockNumberProvider } from \"./blockNumber/provider\";\nimport { ChainStateProvider } from \"./chainState\";\nimport { useConfig } from \"./config/context\";\nimport { EthersProvider } from \"./EthersProvider\";\nimport { NotificationsProvider } from \"./notifications/provider\";\nimport { NetworkActivator } from \"./NetworkActivator\";\nimport { TransactionProvider } from \"./transactions/provider\";\nimport { LocalMulticallProvider } from \"./LocalMulticallProvider\";\n\ninterface DAppProviderProps {\n  children: ReactNode;\n  config: Config;\n}\n\nexport function DAppProvider({ config, children }: DAppProviderProps) {\n  return (\n    <ConfigProvider config={config}>\n      <DAppProviderWithConfig>{children}</DAppProviderWithConfig>\n    </ConfigProvider>\n  );\n}\n\ninterface WithConfigProps {\n  children: ReactNode;\n}\n\nfunction DAppProviderWithConfig({ children }: WithConfigProps) {\n  const { multicallAddresses } = useConfig();\n  const multicallAddressesMerged = { ...MULTICALL_ADDRESSES, ...multicallAddresses };\n\n  return (\n    <EthersProvider>\n      <BlockNumberProvider>\n        <NetworkActivator />\n        <LocalMulticallProvider>\n          <ChainStateProvider multicallAddresses={multicallAddressesMerged}>\n            <NotificationsProvider>\n              <TransactionProvider>{children}</TransactionProvider>\n            </NotificationsProvider>\n          </ChainStateProvider>\n        </LocalMulticallProvider>\n      </BlockNumberProvider>\n    </EthersProvider>\n  );\n}\n","import { TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { useCallback, useState } from \"react\";\nimport { useTransactionsContext } from \"../providers\";\nimport { TransactionStatus, TransactionOptions } from \"../model\";\n\nexport function usePromiseTransaction(chainId: number | undefined, options?: TransactionOptions) {\n  const [state, setState] = useState<TransactionStatus>({ status: \"None\" });\n  const { addTransaction } = useTransactionsContext();\n\n  const promiseTransaction = useCallback(\n    async (transactionPromise: Promise<TransactionResponse>) => {\n      if (!chainId) return;\n      let transaction: TransactionResponse | undefined = undefined;\n      try {\n        transaction = await transactionPromise;\n\n        setState({ transaction, status: \"Mining\", chainId });\n        addTransaction({\n          transaction: {\n            ...transaction,\n            chainId: chainId\n          },\n          submittedAt: Date.now(),\n          transactionName: options?.transactionName\n        });\n        const receipt = await transaction.wait();\n        setState({ receipt, transaction, status: \"Success\", chainId });\n        return receipt;\n      } catch (e: any) {\n        const errorMessage = e.error?.message ?? e.reason ?? e.data?.message ?? e.message;\n        if (transaction) {\n          setState({ status: \"Fail\", transaction, receipt: e.receipt, errorMessage, chainId });\n        } else {\n          setState({ status: \"Exception\", errorMessage, chainId });\n        }\n        return undefined;\n      }\n    },\n    [chainId, setState, addTransaction, options]\n  );\n\n  return { promiseTransaction, state };\n}\n","// @ts-nocheck\n\nimport { TransactionOptions } from \"../../src\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useCallback, useState } from \"react\";\nimport { useEthers } from \"./useEthers\";\nimport { usePromiseTransaction } from \"./usePromiseTransaction\";\nimport { LogDescription } from \"ethers/lib/utils\";\n\nexport function connectContractToSigner(\n  contract: Contract,\n  options?: TransactionOptions,\n  library?: Web3Provider\n) {\n  if (contract.signer) {\n    return contract;\n  }\n\n  if (options?.signer) {\n    return contract.connect(options.signer);\n  }\n\n  if (library?.getSigner()) {\n    return contract.connect(library.getSigner());\n  }\n\n  throw new TypeError(\"No signer available in contract, options or library\");\n} \n\nexport function useContractFunction(\n  contract: Contract,\n  functionName: string,\n  options?: TransactionOptions\n) {\n  const { library, chainId } = useEthers();\n  const { promiseTransaction, state } = usePromiseTransaction(chainId, options);\n  const [events, setEvents] = useState<LogDescription[] | undefined>(undefined);\n\n  const send = useCallback(\n    async (...args: any[]) => {\n      const contractWithSigner = connectContractToSigner(contract, options, library);\n      const receipt = await promiseTransaction(contractWithSigner[functionName](...args));\n      if (receipt?.logs) {\n        const events = receipt.logs\n          .filter((log) => log.address === contract.address)\n          .map((log) => contract.interface.parseLog(log));\n        setEvents(events);\n      }\n    },\n    [contract, functionName, options, library]\n  );\n\n  return { send, state, events };\n}\n","import { MultiCallABI } from \"../constants\";\nimport { useMulticallAddress } from \"./useMulticallAddress\";\nimport { Falsy } from \"../model/types\";\nimport { useContractCall } from \"./useContractCall\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\n\nexport function useEtherBalance(address: string | Falsy): BigNumber | undefined {\n  const multicallAddress = useMulticallAddress();\n  const [etherBalance] =\n    useContractCall(\n      multicallAddress &&\n        address && {\n          abi: MultiCallABI,\n          address: multicallAddress,\n          method: \"getEthBalance\",\n          args: [address]\n        }\n    ) ?? [];\n  return etherBalance;\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\nimport { ERC20Interface } from \"../constants\";\nimport { Falsy } from \"../model/types\";\nimport { useContractCall } from \"./useContractCall\";\n\nexport function useTokenBalance(\n  tokenAddress: string | Falsy,\n  address: string | Falsy\n): BigNumber | undefined {\n  const [tokenBalance] =\n    useContractCall(\n      address &&\n        tokenAddress && {\n          abi: ERC20Interface,\n          address: tokenAddress,\n          method: \"balanceOf\",\n          args: [address]\n        }\n    ) ?? [];\n  return tokenBalance;\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\nimport { ERC20Interface } from \"../constants\";\nimport { Falsy } from \"../model/types\";\nimport { useContractCall } from \"./useContractCall\";\n\nexport function useTokenAllowance(\n  tokenAddress: string | Falsy,\n  ownerAddress: string | Falsy,\n  spenderAddress: string | Falsy\n): BigNumber | undefined {\n  const [allowance] =\n    useContractCall(\n      ownerAddress &&\n        spenderAddress &&\n        tokenAddress && {\n          abi: ERC20Interface,\n          address: tokenAddress,\n          method: \"allowance\",\n          args: [ownerAddress, spenderAddress]\n        }\n    ) ?? [];\n  return allowance;\n}\n","import { useEffect, useState } from \"react\";\n\nfunction getItem(key: string) {\n  if (typeof window === \"undefined\") {\n    return null;\n  }\n\n  const item = window.localStorage.getItem(key);\n  if (item !== null) {\n    try {\n      return JSON.parse(item);\n    } catch {\n      // ignore error\n    }\n  }\n}\n\nfunction setItem(key: string, value: any) {\n  if (value === undefined) {\n    window.localStorage.removeItem(key);\n  } else {\n    const toStore = JSON.stringify(value);\n    window.localStorage.setItem(key, toStore);\n    return JSON.parse(toStore);\n  }\n}\n\nexport function useLocalStorage(key: string) {\n  const [value, setValue] = useState(() => getItem(key));\n\n  useEffect(() => {\n    setValue(getItem(key));\n  }, [key]);\n\n  useEffect(() => {\n    setItem(key, value);\n  }, [value, key]);\n\n  return [value, setValue] as const;\n}\n","import { useMemo } from \"react\";\nimport { useTransactionsContext } from \"../providers\";\nimport { useEthers } from \"./useEthers\";\n\nexport function useTransactions() {\n  const { chainId, account } = useEthers();\n  const { addTransaction, transactions } = useTransactionsContext();\n\n  const filtered = useMemo(() => {\n    if (chainId === undefined || !account) {\n      return [];\n    }\n    return (transactions[chainId] ?? []).filter((x) => x.transaction.from === account);\n  }, [transactions, chainId, account]);\n\n  return {\n    transactions: filtered,\n    addTransaction\n  };\n}\n","import { useEffect, useRef } from \"react\";\n\n// https://usehooks-typescript.com/react-hook/use-interval\nexport function useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay === null) {\n      return;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n\n    return () => clearInterval(id);\n  }, [delay]);\n}\n","import { useMemo } from \"react\";\nimport { Notification, useNotificationsContext } from \"../providers\";\nimport { useEthers } from \"./useEthers\";\nimport { useInterval } from \"./useInterval\";\nimport { useConfig } from \"../providers/config/context\";\n\nfunction getExpiredNotifications(notifications: Notification[], expirationPeriod: number) {\n  const timeFromCreation = (creationTime: number) => Date.now() - creationTime;\n\n  return notifications.filter(\n    (notification) => timeFromCreation(notification.submittedAt) >= expirationPeriod\n  );\n}\n\nexport function useNotifications() {\n  const { chainId, account } = useEthers();\n  const { addNotification, notifications, removeNotification } = useNotificationsContext();\n  const {\n    notifications: { checkInterval, expirationPeriod }\n  } = useConfig();\n\n  const chainNotifications = useMemo(() => {\n    if (chainId === undefined || !account) {\n      return [];\n    }\n    return notifications[chainId] ?? [];\n  }, [notifications, chainId, account]);\n\n  useInterval(() => {\n    if (!chainId) {\n      return;\n    }\n\n    const expiredNotification = getExpiredNotifications(chainNotifications, expirationPeriod);\n    for (const notification of expiredNotification) {\n      removeNotification({ notificationId: notification.id, chainId });\n    }\n  }, checkInterval);\n\n  return {\n    notifications: chainNotifications,\n    addNotification,\n    removeNotification\n  };\n}\n","import { TransactionRequest } from \"@ethersproject/abstract-provider\";\nimport { TransactionOptions } from \"../model\";\nimport { useEthers } from \"./useEthers\";\nimport { usePromiseTransaction } from \"./usePromiseTransaction\";\n\nexport function useSendTransaction(options?: TransactionOptions) {\n  const { library, chainId } = useEthers();\n  const { promiseTransaction, state } = usePromiseTransaction(chainId, options);\n\n  const sendTransaction = async (transactionRequest: TransactionRequest) => {\n    const signer = options?.signer || library?.getSigner();\n    if (signer) {\n      await promiseTransaction(signer.sendTransaction(transactionRequest));\n    }\n  };\n\n  return { sendTransaction, state };\n}\n","// @ts-nocheck\n\nimport { useBlockNumber } from \"../providers/blockNumber/context\";\nimport { BigNumber } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport { useEthers } from \"./useEthers\";\n\nexport function useGasPrice(): BigNumber | undefined {\n  const { library } = useEthers();\n  const blockNumber = useBlockNumber();\n  const [gasPrice, setGasPrice] = useState<BigNumber | undefined>();\n\n  async function updateGasPrice() {\n    setGasPrice(await library?.getGasPrice());\n  }\n\n  useEffect(() => {\n    updateGasPrice();\n  }, [library, blockNumber]);\n\n  return gasPrice;\n}\n","import { useEffect, useState } from \"react\";\nimport { useEthers } from \"./useEthers\";\n\nexport function useLookupAddress() {\n  const { account, library } = useEthers();\n  const [ens, setEns] = useState<string | null>();\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (account && library) {\n      library\n        ?.lookupAddress(account)\n        .then((name) => {\n          if (mounted) {\n            setEns(name);\n          }\n        })\n        .catch(() => setEns(null));\n    }\n\n    return () => {\n      mounted = false;\n    };\n  }, [account, library]);\n\n  return ens;\n}\n","//import { ERC20Interface } from \"../modules/usedapp2/constants\";\r\nimport { Falsy } from \"../modules/usedapp2/model/types\";\r\nimport { useContractCall } from \"../modules/usedapp2/hooks\";\r\n\r\nimport interfaceAbi from \"./mtvsharksAbi.json\";\r\n\r\nimport { utils } from \"ethers\";\r\n\r\n//TEST:\r\n//export const NFT = \"0x822222AB8cC1b0eC78b1733Ec1A10315626ddE31\";\r\n//OLD LIVE:\r\n//export const NFT = \"0xb00E44FC56400Ba18EACA72885315117a184244f\";\r\n//export const NFT = \"0xa25f856Fe9CcC1e9A3109aeaf2880B4dD64694A1\";\r\n\r\n//BSC Test:\r\n//export const NFT = \"0xb8Bb0a1089FEfBF7b98EaF748C78Dc153C1398c9\";\r\nexport const NFT = \"0x496018A5595ab7E223941E1cBA78EBF2349Eff1D\"; \r\n\r\n\r\nexport const ABI = new utils.Interface(interfaceAbi);\r\n\r\nexport function Approve(to: string | Falsy, tokenId: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"approve\", args: [to, tokenId] }) ?? []; return result; }\r\nexport function Burn(_amount: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"burn\", args: [_amount] }) ?? []; return result; }\r\nexport function BurnRdnmTkn(_token: string | Falsy, _to: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"burnRdnmTkn\", args: [_token, _to] }) ?? []; return result; }\r\nexport function MintMultipleNFT(_amount: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"mintMultipleNFT\", args: [_amount] }) ?? []; return result; }\r\nexport function MintNFT() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"mintNFT\", args: [] }) ?? []; return result; }\r\nexport function OwnershipTransferred(previousOwner: string | Falsy, newOwner: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"OwnershipTransferred\", args: [previousOwner, newOwner] }) ?? []; return result; }\r\nexport function RenounceOwnership() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"renounceOwnership\", args: [] }) ?? []; return result; }\r\nexport function ReserveGiveaway(_amount: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"reserveGiveaway\", args: [_amount] }) ?? []; return result; }\r\nexport function SafeTransferFrom(from: string | Falsy, to: string | Falsy, tokenId: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"safeTransferFrom\", args: [from, to, tokenId] }) ?? []; return result; }\r\nexport function SafeTransferFrom2(from: string | Falsy, to: string | Falsy, tokenId: string | Falsy, _data: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"safeTransferFrom\", args: [from, to, tokenId, _data] }) ?? []; return result; }\r\nexport function SetApprovalForAll(operator: string | Falsy, approved: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"setApprovalForAll\", args: [operator, approved] }) ?? []; return result; }\r\nexport function SetBaseURI(baseURI: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"setBaseURI\", args: [baseURI] }) ?? []; return result; }\r\nexport function SetTokenReceiver(_new: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"setTokenReceiver\", args: [_new] }) ?? []; return result; }\r\nexport function ToggleSale() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"toggleSale\", args: [] }) ?? []; return result; }\r\nexport function Transfer(from: string | Falsy, to: string | Falsy, tokenId: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"Transfer\", args: [from, to, tokenId] }) ?? []; return result; }\r\nexport function TransferFrom(from: string | Falsy, to: string | Falsy, tokenId: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"transferFrom\", args: [from, to, tokenId] }) ?? []; return result; }\r\nexport function TransferOwnership(newOwner: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"transferOwnership\", args: [newOwner] }) ?? []; return result; }\r\nexport function WithdrawAll() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"withdrawAll\", args: [] }) ?? []; return result; }\r\nexport function BalanceOf(owner: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"balanceOf\", args: [owner] }) ?? []; return result; }\r\nexport function BaseURI() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"baseURI\", args: [] }) ?? []; return result; }\r\nexport function CalculatePrice() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"calculatePrice\", args: [] }) ?? []; return result; }\r\nexport function CalculatePriceMultiple(_amount: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"calculatePriceMultiple\", args: [_amount] }) ?? []; return result; }\r\nexport function CurrentSupply() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"currentSupply\", args: [] }) ?? []; return result; }\r\nexport function GetApproved(tokenId: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"getApproved\", args: [tokenId] }) ?? []; return result; }\r\nexport function IsApprovedForAll(owner: string | Falsy, operator: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"isApprovedForAll\", args: [owner, operator] }) ?? []; return result; }\r\nexport function IsSaleEnabled() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"isSaleEnabled\", args: [] }) ?? []; return result; }\r\nexport function MaxSupply() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"maxSupply\", args: [] }) ?? []; return result; }\r\nexport function Name() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"name\", args: [] }) ?? []; return result; }\r\nexport function Owner() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"owner\", args: [] }) ?? []; return result; }\r\nexport function OwnerOf(tokenId: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"ownerOf\", args: [tokenId] }) ?? []; return result; }\r\nexport function Receiver() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"receiver\", args: [] }) ?? []; return result; }\r\nexport function SupportsInterface(interfaceId: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"supportsInterface\", args: [interfaceId] }) ?? []; return result; }\r\nexport function Symbol() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"symbol\", args: [] }) ?? []; return result; }\r\nexport function TokenByIndex(index: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"tokenByIndex\", args: [index] }) ?? []; return result; }\r\nexport function TokenOfOwnerByIndex(owner: string | Falsy, index: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"tokenOfOwnerByIndex\", args: [owner, index] }) ?? []; return result; }\r\nexport function TokensOfOwner(_owner: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"tokensOfOwner\", args: [_owner] }) ?? []; return result; }\r\nexport function TokenURI(tokenId: string | Falsy) {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"tokenURI\", args: [tokenId] }) ?? []; return result; }\r\nexport function TotalSupply() {\r\n    const [result]: any = useContractCall({ abi: ABI, address: NFT, method: \"totalSupply\", args: [] }) ?? []; return result; }\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { Image, Text } from \"@chakra-ui/react\";\r\nimport { formatUnits } from \"@ethersproject/units\";\r\n\r\nimport { useEthers } from \"../../modules/usedapp2/hooks\";\r\nimport { BalanceOf} from '../../abi/mtvSharks';\r\n\r\nconst BlockBanner: FC = () => {\r\n  const { account } = useEthers();\r\n  const balance = BalanceOf(account);\r\n\r\n  const [status, setStatus] = useState(\"hghg\");\r\n\r\n  function SetStatus() {\r\n    const temp = balance && formatUnits(balance, 0);\r\n    temp >= 9 ? setStatus(\"Congrats! You have over 3 sharks ♫ ~\") : setStatus(\"Sorry, you don't have enough sharks to qualify.\")\r\n  }\r\n\r\n  useEffect(() => { SetStatus(); }, [balance])\r\n  return account ? (\r\n    <>\r\n      <div className=\"background-faq\">\r\n        <Text className=\"notice-text\">Coming soon ! ! ! </Text>\r\n        <Text className=\"notice-text\">{status}</Text>\r\n        <Image src={require(\"../../assets/images/dao-info.jpeg\").default} alt=\"MTV Sharks Dao\" />\r\n      </div>\r\n    </>\r\n  ) : (<>\r\n    <div className=\"background-faq\">\r\n      <Text className=\"notice-text\">Coming soon ! ! ! </Text>\r\n      <Text className=\"notice-text\">Connect you wallet to check if you qualify...</Text>\r\n      <Image src={require(\"../../assets/images/dao-info.jpeg\").default} alt=\"MTV Sharks Dao\" />\r\n    </div>\r\n  </>)\r\n};\r\n\r\nexport default BlockBanner;\r\n","import { FC } from \"react\";\r\nimport BlockBanner from \"../components/dao/BlockBanner\";\r\n\r\n\r\nconst Dao: FC = () => {\r\n  \r\n  \r\n  return (\r\n    <>\r\n    <div className=\"background-faq\">\r\n      <BlockBanner />\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n  \r\n  export default Dao;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Box } from \"@chakra-ui/react\";\r\n\r\nimport { SharkObject } from \"../../models/MTV Sharks/SharkObject\";\r\nimport { Bid } from \"../../models/marketplace/bid\";\r\nimport { Listing } from \"../../models/marketplace/listing\";\r\nimport { useEthers } from \"../../modules/usedapp2/hooks\";\r\n\r\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from '@chakra-ui/react'\r\n\r\nimport { ChakraProvider } from '@chakra-ui/react'\r\n\r\n// Coming Soon\r\nconst Answer = styled.text`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: yellow;\r\n  font-weight: 800;\r\n  font-size: 2.5em;\r\n`;\r\n// struct listing { uint256 tradeId; address account; uint256 value; uint256 start; uint256 stop; address to; } // id == tradeId, not nftId\r\n//     mapping(uint256 => listing[]) history;  // specific NFT's history, also indicates current status\r\n//     mapping(uint256 => listing) tradeId;     // iterator for ALL trades\r\n//     mapping(uint256 => uint256) sent;       // iterator for ALL sends\r\n\r\nasync function StartSale      (token: String, tokenId: String, price: any) {}\r\nasync function StartAuction   (token: String, tokenId: String, price: any) {}\r\n\r\nasync function CancelSale     (token: String, tokenId: String) {}\r\nasync function CancelAuction  (token: String, tokenId: String) {}\r\nasync function CancelOffer    (token: String, tokenId: String) {}\r\n\r\nasync function BuyToken       (token: String, tokenId: String, object: Listing) {}\r\nasync function CreateListing  () {}\r\nasync function CreateBid      (token: String, tokenId: String, object: Bid) {}\r\nasync function CreateCounter  (token: String, tokenId: String, object: Bid) {}\r\n\r\n// Tabs: Ongoing / Complete / All\r\nconst BlockMarketplace: FC = () => {\r\n  const [ listings,  setListings ] = useState<Listing[]>  ([]);\r\n  const [ trades,    setTrades   ] = useState<Listing[]>  ([]);\r\n  const [ history,   setHistory  ] = useState<Listing[]>  ([]);\r\n  const [ bids,      setBids     ] = useState<Bid[]>      ([]);\r\n\r\n  const { account } = useEthers();\r\n  const listTotal = 0;      // ListVolume();\r\n  const tradeTotal = 0;     // Volume();\r\n  const bidsTotal = 0;      // Bids();\r\n  const myBidsTotal = 0;    // MyBids();\r\n  const totalSupply = 0;    // NFT: MyBids();\r\n\r\n  // notice log:\r\n  // Sale Complete (Complete tx), Auction results, Offer accepted, Outbid, New Offer\r\n\r\n  // sort filters (check box):\r\n  // Auctions, Sales, Accepting Offers, Completed Trades\r\n\r\n  // maybe seperate contracts for account history and completed trades notices\r\n  // Modifiable:\r\n  //  Listings\r\n  //  Bids\r\n  // Pushable + Readable:\r\n  //  History\r\n  //  Tx history\r\n\r\n  useEffect(() => {}, [])\r\n  return account \r\n    ? (<ChakraProvider><Tabs variant='enclosed' colorScheme='green'>\r\n      <TabList>\r\n        <Tab>Active Auctions</Tab>\r\n        <Tab>Active Sales</Tab>\r\n        <Tab>All NFTs</Tab>\r\n        <Tab>Unavalible</Tab>\r\n        <Tab>History</Tab>\r\n      </TabList>\r\n    \r\n      <TabPanels>\r\n        <TabPanel><p>Coming soon!</p></TabPanel>\r\n        <TabPanel><p>Coming soon!</p></TabPanel>\r\n        <TabPanel><p>Coming soon!</p></TabPanel>\r\n        <TabPanel><p>Coming soon!</p></TabPanel>\r\n        <TabPanel><p>Coming soon!</p></TabPanel>\r\n      </TabPanels>\r\n    </Tabs></ChakraProvider>) \r\n    : (<ChakraProvider><Answer >Coming very soon!</Answer></ChakraProvider>)\r\n}\r\n\r\nexport default BlockMarketplace;\r\n\r\n// method to start auction\r\n// method to start sale\r\n// method to buy art\r\n// method to offer buy art\r\n// method to cancel auction\r\n// method to cancel sale\r\n// method to cancel offer\r\n// method to see all current offers\r\n// method to order auctions by ending soonest\r\n// method to order sales by type, recent listed, price\r\n// method to see all trade logs\r\n// method to see all trade logs for specific NFT\r\n// method to see all listing logs\r\n","import { FC } from \"react\";\r\n\r\nimport BlockMarketplace from \"../components/marketplace/BlockMarketplace\";\r\n\r\nconst Marketplace: FC = () => {\r\n  \r\n    return (\r\n      <>\r\n        <BlockMarketplace />\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default Marketplace;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { Image, Text } from \"@chakra-ui/react\";\r\nimport { formatUnits } from \"@ethersproject/units\";\r\n\r\nimport { useEthers } from \"../../modules/usedapp2/hooks\";\r\nimport { BalanceOf} from '../../abi/mtvSharks';\r\n\r\nconst BlockBanner: FC = () => {\r\n  const { account } = useEthers();\r\n  const balance = BalanceOf(account);\r\n\r\n  const [status, setStatus] = useState(\"hghg\");\r\n\r\n  function SetStatus() {\r\n    const temp = balance && formatUnits(balance, 0);\r\n    temp >= 9 ? setStatus(\"Congrats! You have over 9 sharks ♫ ~\") : setStatus(\"Sorry, you don't have enough sharks to qualify.\")\r\n  }\r\n\r\n  useEffect(() => { SetStatus(); }, [balance])\r\n  return account ? (\r\n    <>\r\n      <div className=\"background-faq\">\r\n        <Text className=\"notice-text\">Coming soon ! ! ! </Text>\r\n        <Text className=\"notice-text\">{status}</Text>\r\n        <Image src={require(\"../../assets/images/shark-club.jpeg\").default} alt=\"MTV Sharks Club\" />\r\n      </div>\r\n    </>\r\n  ) : (<>\r\n    <div className=\"background-faq\">\r\n      <Text className=\"notice-text\">Coming soon ! ! ! </Text>\r\n      <Text className=\"notice-text\">Connect you wallet to check if you qualify...</Text>\r\n      <Image src={require(\"../../assets/images/shark-club.jpeg\").default} alt=\"MTV Sharks Club\" />\r\n    </div>\r\n  </>)\r\n};\r\n\r\nexport default BlockBanner;\r\n","import { FC } from \"react\";\r\nimport BlockBanner from \"../components/shark-club/BlockBanner\";\r\n\r\nconst SharkClub: FC = () => {\r\n  \r\n    return (\r\n      <><BlockBanner /></>\r\n    );\r\n  };\r\n  \r\n  export default SharkClub;\r\n","import { FC } from \"react\";\r\nimport \"./App.scss\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Faq from \"./pages/Faq\";\r\nimport Dao from \"./pages/Dao\";\r\nimport Marketplace from \"./pages/Marketplace\";\r\nimport SharkClub from \"./pages/SharkClub\";\r\n//import Configurations from \"./pages/Configurations\";\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\n//import IpfsRouter from \"ipfs-react-router\";\r\n\r\n// change sidebar to consume x height\r\n// change footer to consume y height\r\n// change Route to consume 100% - x - y height\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <>\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} exact></Route>\r\n          <Route path=\"/faq\" component={Faq} exact></Route>\r\n          <Route path=\"/dao\" component={Dao} exact></Route>\r\n          <Route path=\"/marketplace\" component={Marketplace} exact></Route>\r\n          <Route path=\"/the-shark-club\" component={SharkClub} exact></Route>\r\n        </Switch> \r\n      </HashRouter>\r\n    </>\r\n  ); \r\n}; \r\n\r\nexport default App;\r\n","import { useEffect, useRef } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Jazzicon from \"@metamask/jazzicon\";\n\nimport { useEthers } from \"../../modules/usedapp2/hooks\";\n\nconst StyledIdenticon = styled.div`\n  height: 1rem;\n  width: 1rem;\n  border-radius: 1.125rem;\n  classname: styledIdenticon;\n`;\n\nexport default function Identicon() {\n  const ref = useRef<HTMLDivElement>();\n  const { account } = useEthers();\n\n  useEffect(() => {\n    if (account && ref.current) {\n      ref.current.innerHTML = \"\";\n      ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)));\n    }\n  }, [account]);\n\n  return <StyledIdenticon ref={ref as any} />;\n}\n","import { Button, Box, Text } from \"@chakra-ui/react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport Identicon from \"./Identicon\";\n\nimport { useEthers, useEtherBalance } from \"../../modules/usedapp2/hooks\";\n\ntype Props = { handleOpenModal: any; };\n\nexport default function ConnectButton({ handleOpenModal }: Props) {\n  const { activateBrowserWallet, account, chainId } = useEthers();\n  const etherBalance = useEtherBalance(account);\n\n  function handleConnectWallet() {\n    activateBrowserWallet();\n  }\n\n  return account ? (\n    <Box maxWidth={\"320px\"}>\n    <Box display=\"flex\" alignItems=\"center\" background=\"gray.700\" borderRadius=\"xl\" py=\"0\" mr=\"4\">\n      <Box className=\"ethBox\">\n        <Text color=\"white\" className=\"ethText\">\n          {etherBalance && parseFloat(formatEther(etherBalance)).toFixed(3)}\n          {chainId === 62621\n            ? \" MTV\"\n            : chainId === 4002\n            ? \" tFTM\"\n            : chainId === 250\n            ? \" FTM\"\n            : chainId === 97\n            ? \" tBNB\"\n            : chainId === 56\n            ? \" BNB\"\n            : chainId === 2152\n            ? \" FRA\"\n            : chainId === 2153\n            ? \" tFRA\"\n            : \" ETH\"} \n        </Text>\n      </Box>\n      <Button\n        className=\"accountButton\"\n        onClick={handleOpenModal}\n        bg=\"gray.800\"\n        border=\"1px solid transparent\"\n        _hover={{ border: \"1px\", borderStyle: \"solid\", borderColor: \"blue.400\", backgroundColor: \"gray.700\" }}\n        borderRadius=\"xl\"\n        m=\"1px\"\n        px={3}\n      >\n        <Text className=\"accountText\" color=\"white\" fontWeight=\"medium\" mr=\"2\">\n          {account && `${account.slice(0, 6)}...${account.slice(account.length - 4, account.length)}`}\n        </Text>\n        <Identicon />\n      </Button>\n    </Box>\n    </Box>\n  ) : (\n    <Button onClick={handleConnectWallet}>Connect to a wallet</Button>\n  );\n}\n","import { Box, Text, Circle } from \"@chakra-ui/react\";\r\n\r\ntype Props = { input: any };\r\nexport default function StatusCircle({input}: Props) {\r\n   switch(input) {\r\n      case 0: { return(<Box className=\"status-box\"><Text color=\"blue\">Idle </Text><Box className=\"status-circle0\"><Circle bg=\"blue\"size=\"10px\"/></Box></Box>) }\r\n      case 1: { return(<Box className=\"status-box\"><Text color=\"green\" as='cite'>For Sale </Text><Box className=\"status-circle1\"><Circle  bg=\"green\"size=\"10px\"/></Box></Box>) }\r\n      case 2: { return(<Box className=\"status-box\"><Text color=\"yellow\">In Auction </Text><Box className=\"status-circle2\"><Circle  bg=\"yellow\"size=\"10px\"/></Box></Box>) }\r\n      case 3: { return(<Box className=\"status-box\"><Text color=\"red\">Closed </Text><Box className=\"status-circle3\"><Circle bg=\"red\"size=\"10px\"/></Box></Box>) }\r\n      case 4: { return(<Box className=\"status-box\"><Text color=\"purple\">Owner </Text><Box className=\"status-circle3\"><Circle bg=\"purple\"size=\"10px\"/></Box></Box>) }\r\n      default: { return(<Box className=\"status-box\"><Text color=\"gray\">loading... </Text><Box className=\"status-circle-load\"><Circle  bg=\"gray\"size=\"10px\"/></Box></Box>) }\r\n   } \r\n}\r\n\r\n// gray     - loading\r\n// blue     - idle\r\n// green    - for sale\r\n// yellow   - in auction\r\n// red      - claim waiting / reject all offers\r\n// purple   - owner\r\n","import { useState } from \"react\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport { Card, CardGroup } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Link,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Text,\r\n  extendTheme,\r\n  ChakraProvider,\r\n  Image\r\n} from \"@chakra-ui/react\";\r\nimport { ExternalLinkIcon, CopyIcon } from \"@chakra-ui/icons\";\r\n\r\nimport { SharkObject } from \"../models/MTV Sharks/SharkObject\";\r\nimport { useEthers } from \"../modules/usedapp2/hooks\";\r\nimport StatusCircle from \"./StatusCircle\";\r\n\r\n// image\r\n// status block\r\n// tabs: Image (option goes away on desktop) / Data / History\r\n// Data Block / History Block\r\n// Buttons Block: disable buttons that aren't useable (all disabled by default)\r\n\r\nconst theme = extendTheme({\r\n  components: {\r\n    Modal: {\r\n      baseStyle: (props: any) => ({\r\n        dialog: {\r\n          maxWidth: [\"80%\", \"80%\", \"80%\"],\r\n          minWidth: \"95%\",\r\n          maxHeight: [\"80%\", \"80%\", \"80%\"],\r\n          minHeight: \"95%\",\r\n          bg: \"#00ff00\"\r\n        }\r\n      })\r\n    }\r\n  }\r\n});\r\n\r\nconst Header = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-between;\r\n`;\r\n\r\ntype Props = { isOpen: any; onClose: any; sharkObject: SharkObject; };\r\nexport default function NftModal({ isOpen, onClose, sharkObject }: Props) {\r\n  console.log(\"modal did something\");\r\n  const [, setValue] = useState(\"\");\r\n\r\n  const { account} = useEthers();\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"md\">\r\n      <ModalOverlay />\r\n      <ModalContent\r\n        background=\"gray.900\"\r\n        border=\"1px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"gray.700\"\r\n        borderRadius=\"3xl\"\r\n      >\r\n        <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\"> {sharkObject.name} </ModalHeader>\r\n        <Header>\r\n          <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\">Status: <StatusCircle input={4} /></ModalHeader>\r\n        </Header>\r\n        <ModalCloseButton\r\n          color=\"white\"\r\n          fontSize=\"sm\"\r\n          _hover={{ color: \"whiteAlpha.700\" }}\r\n        />\r\n        <Header>\r\n        <ModalBody pt={0} px={4}>\r\n          <Box borderRadius=\"3xl\" border=\"1px\" borderStyle=\"solid\" borderColor=\"gray.600\" px={5} pt={4} pb={2} mb={3} >\r\n            <Image src={\"https://fudgy.mypinata.cloud/ipfs/QmWHBp5ogVWWugkCpBqLT8MygNr9ZJCXJfQi4oYWMqRR3W/\" + String(sharkObject![\"custom_fields\"].edition) + \".png\"} alt=\"MTV Sharks Club\" />\r\n          </Box>\r\n          </ModalBody>\r\n        <ModalBody pt={0} px={4}>\r\n          <Box borderRadius=\"3xl\" border=\"1px\" borderStyle=\"solid\" borderColor=\"gray.600\" px={5} pt={4} pb={2} mb={3} >\r\n            \r\n            <Flex alignItems=\"center\" mt={2} mb={4} lineHeight={1}>\r\n            <Text color=\"white\">Owner: </Text>\r\n              <Text color=\"white\" fontSize=\"xl\" fontWeight=\"semibold\" ml=\"2\" lineHeight=\"1.1\">\r\n                {account && `${account.slice(0, 6)}...${account.slice(account.length - 4, account.length)}`}\r\n              </Text>\r\n              <Link\r\n                fontSize=\"sm\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                href={`https://e.mtv.ac/account.html?address=${account}`}\r\n                isExternal\r\n                color=\"gray.400\"\r\n                ml={6}\r\n                _hover={{ color: \"whiteAlpha.800\", textDecoration: \"underline\" }}\r\n              >\r\n                <ExternalLinkIcon mr={1} />\r\n              </Link>\r\n            </Flex>\r\n            <Text color=\"white\" fontSize=\"xl\" fontWeight=\"semibold\" ml=\"2\" lineHeight=\"1.1\">Metadata:</Text>\r\n            <Text color=\"white\" fontSize=\"l\" fontWeight=\"semibold\" ml=\"2\" lineHeight=\"1.1\">Generation in progress . . .</Text>\r\n          </Box>\r\n        </ModalBody>\r\n          </Header>\r\n          <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\"> Transaction History: </ModalHeader>\r\n        {/* <ModalFooter justifyContent=\"end\" background=\"gray.700\" borderBottomLeftRadius=\"3xl\" borderBottomRightRadius=\"3xl\" p={6} ><Text></Text></ModalFooter> */}\r\n      </ModalContent>\r\n    </Modal>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n","import { SharkObject } from \"../../models/MTV Sharks/SharkObject\";\r\nimport { Card, } from \"react-bootstrap\";\r\nimport { Box, Button, useDisclosure } from '@chakra-ui/react';\r\n\r\nimport NftModal from \"../NftModal\";\r\nimport \"@fontsource/inter\";\r\n\r\ninterface Props { sharkObject?: SharkObject; }\r\nfunction GenerateCard({sharkObject}: Props) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return sharkObject ? (\r\n    <>\r\n      <Button onClick={onOpen} background=\"transparent\" isActive={false}>\r\n        <Card className=\"modal-card\" style={{ width: '400px' }}>\r\n          <Card.Img variant=\"top\" src={\"https://mtvsharks.s3.us-west-1.amazonaws.com/\" + sharkObject[\"custom_fields\"].edition + \".png\"} />\r\n          <div className=\"overlay\"># {sharkObject[\"custom_fields\"].edition}</div>\r\n        </Card>\r\n      </Button>\r\n      <NftModal isOpen={isOpen} onClose={onClose} sharkObject={sharkObject}/>\r\n      </>\r\n  ) : (<Box>{`${console.log(\"GenerateCard failed: \", sharkObject)}`}</Box>);\r\n}\r\n\r\nexport default GenerateCard;\r\n","import { useEffect, useState } from \"react\";\r\nimport { SimpleGrid, Button } from '@chakra-ui/react';\r\n\r\nimport { SharkObject } from \"../../models/MTV Sharks/SharkObject\";\r\nimport GenerateCard from \"./AccountModalCard\";\r\nimport \"../../styles/modal.scss\";\r\n\r\nconst renderData = (data: SharkObject[]) => {\r\n  return (\r\n    <SimpleGrid columns={3} spacingY={28}>{data.map((todo: any, index: any) => {\r\n      return <li key={index} className=\"item\" ><GenerateCard sharkObject = {data[index]} /></li>;\r\n    })}</SimpleGrid>\r\n  );\r\n};\r\n\r\n///@Dev - Only create a grid of paginated card objects given inputted data of type SharkObject[]\r\ninterface Props { sharkObjects: SharkObject[]; }\r\nfunction PaginationComponent({ sharkObjects }: Props) {\r\n  const [data, setData] = useState<SharkObject[]>([]);\r\n  const [currentPage, setcurrentPage] = useState(1);\r\n  const [itemsPerPage, setitemsPerPage] = useState(6);\r\n  const pages = [];\r\n  for (let i = 1; i <= Math.ceil(data.length / itemsPerPage); i++) { pages.push(i); }\r\n\r\n  const indexOfLastItem = currentPage*itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n  useEffect(() => { setData(sharkObjects); }, [currentItems]);\r\n  const handleClick = (event: any) => { setcurrentPage(Number(event.target.id)); };\r\n\r\n  console.log(\"current data: \", data);\r\n  \r\n  const renderPageNumbers = pages.map((number: any) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (<li key={number} id={number} onClick={handleClick} className={currentPage == number ? \"active\" : undefined} > {number} </li>);\r\n    } else { return undefined; }\r\n  });\r\n  \r\n    const handleNextbtn = () => {\r\n    setcurrentPage(currentPage + 1);\r\n\r\n    if (currentPage + 1 > maxPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  const handlePrevbtn = () => {\r\n    setcurrentPage(currentPage - 1);\r\n\r\n    if ((currentPage - 1) % pageNumberLimit == 0) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n    }\r\n  };\r\n  \r\n  let pageIncrementBtn = null;\r\n  let pageDecrementBtn = null;\r\n  if (pages.length > maxPageNumberLimit) { pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>; }\r\n  if (minPageNumberLimit >= 1)           { pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>; }\r\n\r\n  return (\r\n    <>\r\n      {renderData(currentItems)}\r\n\r\n      <ul className=\"pageNumbers\">\r\n        <Button onClick={handlePrevbtn} disabled={currentPage == pages[0] ? true : false} > Prev </Button>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n        <Button onClick={handleNextbtn} disabled={currentPage == pages[pages.length - 1] ? true : false} > Next </Button>\r\n      </ul>\r\n   \r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaginationComponent;\r\n","import { FC, useState, useEffect }      from \"react\";\r\nimport { formatUnits }                  from \"@ethersproject/units\";\r\n\r\nimport { useEthers }                    from \"../../modules/usedapp2/hooks\";\r\nimport { SharkObject }                  from \"../../models/MTV Sharks/SharkObject\";\r\nimport metadata                         from '../../abi/metadata.json';\r\nimport PaginationComponent              from './AccountModalPagination';\r\nimport { TokensOfOwner }                from '../../abi/mtvSharks';\r\n\r\nconst AccountModalCollection: FC<{balance: number}> = ({balance}) => {\r\n    const [data, setData] = useState<SharkObject[]>([]);\r\n    const { account } = useEthers();\r\n\r\n    const temp: any[] = TokensOfOwner(account);\r\n    let indecies: number[] = [];\r\n    if(account && temp) for(let i=0; i<balance; i++) indecies = [...indecies, temp[i] && formatUnits(temp[i], 0)];\r\n\r\n    function MakeArray(data: SharkObject[], indecies: any[]) {\r\n        let newArray: SharkObject[] = [];\r\n        for(let index=0; index<indecies.length; index++) { newArray = [...newArray, data[indecies[index]]]}\r\n        return newArray;\r\n    }\r\n      \r\n    function Collection(sharkList: any) {\r\n        const objects: SharkObject[] = sharkList;\r\n        setData(MakeArray(objects, indecies));\r\n    }\r\n    \r\n    useEffect(() => { Collection(metadata); }, [temp])\r\n\r\n    return (<PaginationComponent sharkObjects = {data} />);\r\n}\r\n\r\nexport default AccountModalCollection;\r\n","import { useEffect, useState } from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { ExternalLinkIcon, CopyIcon } from \"@chakra-ui/icons\";\n\nimport {\n  Box,\n  Button,\n  Flex,\n  Link,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Text,\n  Grid\n} from \"@chakra-ui/react\";\n\nimport { \n  BalanceOf,\n  TokenByIndex,\n  TokensOfOwner,\n} from '../../abi/mtvSharks';\n\nimport { TotalSupply, CalculatePrice, MaxSupply } from '../../abi/mtvSharks';\n\nimport Identicon from \"./Identicon\";\nimport { useEthers } from \"../../modules/usedapp2/hooks\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport AccountModalCollection from \"./AccountModalCollection\";\n\ntype Props = { isOpen: any; onClose: any; };\n\nexport default function AccountModal({ isOpen, onClose }: Props) {\n  const [, setValue] = useState(\"\");\n  const { account, deactivate } = useEthers();\n  const balance = BalanceOf(account);\n  //const tokens = TokenByIndex,\n  //const tokens: any[] = TokensOfOwner(account);\n\n  function handleDeactivateAccount() {\n    deactivate();\n    onClose();\n  }\n\n  // function CreateArray() {\n  //   let textbody;\n  //   for(token: any of tokens) {\n  //     textbody = \n  //   }\n  // }\n\n  //useEffect(() => {}, [balance, tokens])\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"md\">\n      <ModalOverlay />\n      <ModalContent background=\"gray.900\" border=\"1px\" borderStyle=\"solid\" borderColor=\"gray.700\" borderRadius=\"3xl\" >\n        <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\"> Account </ModalHeader>\n        <ModalCloseButton color=\"white\" fontSize=\"sm\" _hover={{ color: \"whiteAlpha.700\" }} />\n        <ModalBody pt={0} px={4}>\n          <Box borderRadius=\"3xl\" border=\"1px\" borderStyle=\"solid\" borderColor=\"gray.600\" px={5} pt={4} pb={2} mb={3} >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n              <Text color=\"gray.400\" fontSize=\"sm\"> Connected with MetaMask </Text>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                borderColor=\"blue.800\"\n                borderRadius=\"3xl\"\n                color=\"blue.500\"\n                fontSize=\"13px\"\n                fontWeight=\"normal\"\n                px={2}\n                height=\"26px\"\n                _hover={{ background: \"none\", borderColor: \"blue.300\", textDecoration: \"underline\" }}\n                onClick={handleDeactivateAccount}\n              > Change </Button>\n            </Flex>\n            <Flex alignItems=\"center\" mt={2} mb={4} lineHeight={1}>\n              <Identicon />\n              <Text color=\"white\" fontSize=\"xl\" fontWeight=\"semibold\" ml=\"2\" lineHeight=\"1.1\"> \n                {account && `${account.slice(0, 6)}...${account.slice(account.length - 4, account.length)}`}\n              </Text>\n            </Flex>\n            <Flex alignContent=\"center\" m={3}>\n              <CopyToClipboard text={`${account}`} onCopy={() => setValue(`${account}`)}>\n                <Button\n                  variant=\"link\"\n                  color=\"gray.400\"\n                  fontWeight=\"normal\"\n                  fontSize=\"sm\"\n                  _hover={{ textDecoration: \"none\", color: \"whiteAlpha.800\" }}\n                >\n                  <CopyIcon mr={1} />\n                  Copy Address\n                </Button>\n              </CopyToClipboard>\n              <Link\n                fontSize=\"sm\"\n                display=\"flex\"\n                alignItems=\"center\"\n                href={`https://e.mtv.ac/account.html?address=${account}`}\n                isExternal\n                color=\"gray.400\"\n                ml={6}\n                _hover={{ color: \"whiteAlpha.800\", textDecoration: \"underline\" }}\n              >\n                <ExternalLinkIcon mr={1} />\n                View on Explorer\n              </Link>\n            </Flex>\n          </Box>\n        </ModalBody>\n\n        <ModalFooter \n          justifyContent=\"end\"\n          background=\"gray.700\"\n          borderBottomLeftRadius=\"3xl\"\n          borderBottomRightRadius=\"3xl\"\n          height=\"600px\"\n          padding= \"10px\"\n        >\n          <Grid className=\"modal-footer\">\n          <div className=\"modal-footer-balance\">Balance: { balance && formatUnits(balance, 0) }</div>\n        <AccountModalCollection balance={balance && formatUnits(balance, 0)}/>\n        </Grid>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { useState } from \"react\";\r\nimport \"../styles/header.scss\";\r\n\r\nimport { AiOutlineMenu, AiOutlineClose } from \"react-icons/ai\";\r\n\r\nimport { ChakraProvider, useDisclosure, Link, Image, theme } from \"@chakra-ui/react\";\r\nimport ConnectButton from \"./AccountModal/ConnectButton\";\r\nimport AccountModal from \"./AccountModal/AccountModal\";\r\nimport \"@fontsource/inter\";\r\n\r\n\r\n\r\nconst Header = () => {\r\n  const [click, setClick] = useState(false);\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  \r\n  return (\r\n    <div className=\"header-header\">\r\n      <div className=\"logo-nav\">\r\n        <div className=\"logo-container\">\r\n        <Link href={`/#`} onClick={closeMobileMenu}><Image src={require(\"../assets/images/logo.png\").default} className=\"logo\" alt=\"MTV Sharks\" /></Link>\r\n        </div>\r\n\r\n        <ul className={click ? \"nav-options active\" : \"nav-options\"}>\r\n        <li className=\"option\" onClick={closeMobileMenu}><a href=\"#/\">Home</a></li>\r\n        <li className=\"option\" onClick={closeMobileMenu}><a href=\"https://twitter.com/MTVSharks\">Twitter</a></li>\r\n        <li className=\"option\" onClick={closeMobileMenu}><a href=\"https://discord.gg/PZGupwBHFe\">Discord</a></li>\r\n        <li className=\"option\" onClick={closeMobileMenu}><a href=\"#/faq\">FAQ</a></li>\r\n        <li className=\"option\" onClick={closeMobileMenu}><a href=\"#/dao\">DAO</a></li>\r\n        <li className=\"option\" onClick={closeMobileMenu}><a href=\"#/the-shark-club\">The Shark Club</a></li>\r\n        <li className=\"option\" onClick={closeMobileMenu}><a href=\"#/marketplace\">Marketplace</a></li>\r\n        {/* <li className=\"option mobile-option\" onClick={closeMobileMenu}><a href=\"#\">Account</a></li> */}\r\n\r\n            \r\n          <li className=\"option mobile-option\" onClick={closeMobileMenu}>\r\n              <ChakraProvider theme={theme}>\r\n                <ConnectButton handleOpenModal={onOpen} />\r\n                <AccountModal isOpen={isOpen} onClose={onClose} />\r\n              </ChakraProvider>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <ul className=\"signin-up\">\r\n        <li onClick={closeMobileMenu}>\r\n        <ChakraProvider theme={theme}>\r\n          <ConnectButton handleOpenModal={onOpen} />\r\n          <AccountModal isOpen={isOpen} onClose={onClose} />\r\n        </ChakraProvider>\r\n        </li>\r\n      </ul>\r\n      <div className=\"mobile-menu\" onClick={handleClick}>\r\n        {click \r\n            ? (<AiOutlineClose className=\"menu-icon\" />) \r\n            : (<AiOutlineMenu className=\"menu-icon\" />)\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\n","import styled from \"styled-components\";\nimport { FC } from \"react\";\nimport \"../styles/footer.scss\";\n\nconst FooterDefault = styled.div`\n  min-width: 100vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(15px);\n  color: black;\n  position: fixed;\n  bottom: 0px;\n`;\n\n// add footer socials\n\nconst Footer: FC = () => {\n  return (\n    <>\n      <div className=\"footer-footer\">MTV Sharks</div>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\n//import reportWebVitals from \"./reportWebVitals\";\r\n\r\n//import { ChainId } from \"./modules/usedapp2/constants/chainId\";\r\nimport { DAppProvider } from \"./modules/usedapp2/providers\";\r\n\r\n//import \"./vendor/all.min.css\";\r\nimport \"./vendor/animate.min.css\";\r\nimport \"./vendor/bootstrap.min.css\";\r\n//import \"./vendor/icons.min.css\";\r\nimport \"./vendor/slider.min.css\";\r\n\r\n\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\n\r\n/*\r\n * ChainIds:\r\n *  BSC:         56\r\n *  URL:         https://dataseed1.binance.org/\r\n *  BSC Testnet: 97\r\n *  URL:         https://testnet.bscscan.com\r\n *  FTM:         250\r\n *  URL:         https://ftmscan.com/\r\n *  FTM Testnet: 0xfa2 === 4002\r\n *  URL:         https://rpc.testnet.fantom.network/\r\n *\r\n *  Need to deploy multicall contract on BSC Testnet and FTM Mainnet\r\n */\r\n\r\n//const config = {\r\n//  readOnlyChainId: 56\r\n//readOnlyUrls: {\r\n//  [ChainId.FTM_Testnet]: \"https://rpc.testnet.fantom.network/\"\r\n//}\r\n//};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DAppProvider config={{}}>\r\n      <Header />\r\n      <App />\r\n      <Footer />\r\n    </DAppProvider>\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n); \r\n\r\nexport * from \"./modules/usedapp2/constants\";\r\nexport * from \"./modules/usedapp2/providers\";\r\nexport * from \"./modules/usedapp2/hooks\";\r\nexport * from \"./modules/usedapp2/model\";\r\nexport * from \"./modules/usedapp2/helpers\";\r\n"],"sourceRoot":""}